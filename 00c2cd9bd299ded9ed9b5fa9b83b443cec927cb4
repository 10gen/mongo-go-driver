{
  "comments": [
    {
      "key": {
        "uuid": "d170ede5_1ae6743f",
        "filename": "x/mongo/driver/batch_cursor.go",
        "patchSetId": 8
      },
      "lineNbr": 119,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-05-10T14:54:16Z",
      "side": 1,
      "message": "How can this case happen? If there is a limit or batchSize on the initial find operation, the minimum of the two (with some extra logic for negative limits) should be sent as the numberToReturn field on the OP_QUERY.",
      "range": {
        "startLine": 119,
        "startChar": 22,
        "endLine": 119,
        "endChar": 47
      },
      "revId": "00c2cd9bd299ded9ed9b5fa9b83b443cec927cb4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa360f03_93d8bf55",
        "filename": "x/mongo/driver/batch_cursor.go",
        "patchSetId": 8
      },
      "lineNbr": 119,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-05-10T15:59:47Z",
      "side": 1,
      "message": "This is from the legacy batch cursor creation logic. Legacy OP_QUERY doesn\u0027t support limit.",
      "parentUuid": "d170ede5_1ae6743f",
      "range": {
        "startLine": 119,
        "startChar": 22,
        "endLine": 119,
        "endChar": 47
      },
      "revId": "00c2cd9bd299ded9ed9b5fa9b83b443cec927cb4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81b6ecb9_9167c00c",
        "filename": "x/mongo/driver/batch_cursor.go",
        "patchSetId": 8
      },
      "lineNbr": 119,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-05-10T17:26:56Z",
      "side": 1,
      "message": "This might be a branch in our existing code that\u0027s never taken, but I can\u0027t say for sure that it\u0027s not needed. Resolving for now and we can come back to it in a later ticket if needed.",
      "parentUuid": "aa360f03_93d8bf55",
      "range": {
        "startLine": 119,
        "startChar": 22,
        "endLine": 119,
        "endChar": 47
      },
      "revId": "00c2cd9bd299ded9ed9b5fa9b83b443cec927cb4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a24b79d_61622096",
        "filename": "x/mongo/driver/operation.go",
        "patchSetId": 8
      },
      "lineNbr": 118,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-05-10T14:54:16Z",
      "side": 1,
      "message": "minimum",
      "range": {
        "startLine": 118,
        "startChar": 49,
        "endLine": 118,
        "endChar": 56
      },
      "revId": "00c2cd9bd299ded9ed9b5fa9b83b443cec927cb4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0c20d9f_62952f41",
        "filename": "x/mongo/driver/operation.go",
        "patchSetId": 8
      },
      "lineNbr": 118,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-05-10T15:59:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3a24b79d_61622096",
      "range": {
        "startLine": 118,
        "startChar": 49,
        "endLine": 118,
        "endChar": 56
      },
      "revId": "00c2cd9bd299ded9ed9b5fa9b83b443cec927cb4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "47c78872_b1fe0d64",
        "filename": "x/mongo/driver/operation.go",
        "patchSetId": 8
      },
      "lineNbr": 128,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-05-10T14:54:16Z",
      "side": 1,
      "message": "I know this code was already here, but are you opposed to renaming this to ClientSession or Session? It\u0027s a nit, but this confuses me every time I see it because I think it\u0027s a mongo Client.",
      "range": {
        "startLine": 128,
        "startChar": 1,
        "endLine": 128,
        "endChar": 7
      },
      "revId": "00c2cd9bd299ded9ed9b5fa9b83b443cec927cb4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c0c295a_dd332601",
        "filename": "x/mongo/driver/operation.go",
        "patchSetId": 8
      },
      "lineNbr": 128,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-05-10T15:59:47Z",
      "side": 1,
      "message": "I\u0027d say file a ticket for this, I don\u0027t want to add more churn to this patch.",
      "parentUuid": "47c78872_b1fe0d64",
      "range": {
        "startLine": 128,
        "startChar": 1,
        "endLine": 128,
        "endChar": 7
      },
      "revId": "00c2cd9bd299ded9ed9b5fa9b83b443cec927cb4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "51221c4f_94276b40",
        "filename": "x/mongo/driver/operation.go",
        "patchSetId": 8
      },
      "lineNbr": 128,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-05-10T17:26:56Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "4c0c295a_dd332601",
      "range": {
        "startLine": 128,
        "startChar": 1,
        "endLine": 128,
        "endChar": 7
      },
      "revId": "00c2cd9bd299ded9ed9b5fa9b83b443cec927cb4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "67f22930_a445555d",
        "filename": "x/mongo/driver/operation.go",
        "patchSetId": 8
      },
      "lineNbr": 308,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-05-10T14:54:16Z",
      "side": 1,
      "message": "Can you explain why this is has to be here instead of being consolidated into the WriteCommandError logic below?",
      "range": {
        "startLine": 308,
        "startChar": 2,
        "endLine": 308,
        "endChar": 12
      },
      "revId": "00c2cd9bd299ded9ed9b5fa9b83b443cec927cb4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48d6baf2_9d6b97fe",
        "filename": "x/mongo/driver/operation.go",
        "patchSetId": 8
      },
      "lineNbr": 308,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-05-10T15:59:47Z",
      "side": 1,
      "message": "because tt will be interface{} if there are two cases together and we need to call specific methods on the Error.",
      "parentUuid": "67f22930_a445555d",
      "range": {
        "startLine": 308,
        "startChar": 2,
        "endLine": 308,
        "endChar": 12
      },
      "revId": "00c2cd9bd299ded9ed9b5fa9b83b443cec927cb4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "519d65e3_ce577391",
        "filename": "x/mongo/driver/operation.go",
        "patchSetId": 8
      },
      "lineNbr": 308,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-05-13T14:24:07Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "48d6baf2_9d6b97fe",
      "range": {
        "startLine": 308,
        "startChar": 2,
        "endLine": 308,
        "endChar": 12
      },
      "revId": "00c2cd9bd299ded9ed9b5fa9b83b443cec927cb4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "433e6bb0_cc943dbb",
        "filename": "x/mongo/driver/operation.go",
        "patchSetId": 8
      },
      "lineNbr": 309,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-05-10T14:54:16Z",
      "side": 1,
      "message": "I think we need to call publishFinishedEvent even if we\u0027re retrying. The retry will generate a new CommandStartedEvent, which will need its own corresponding finished event.",
      "range": {
        "startLine": 309,
        "startChar": 3,
        "endLine": 309,
        "endChar": 65
      },
      "revId": "00c2cd9bd299ded9ed9b5fa9b83b443cec927cb4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c16bd38_c0a7536b",
        "filename": "x/mongo/driver/operation.go",
        "patchSetId": 8
      },
      "lineNbr": 309,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-05-10T15:59:47Z",
      "side": 1,
      "message": "Where does it say how we handle this?",
      "parentUuid": "433e6bb0_cc943dbb",
      "range": {
        "startLine": 309,
        "startChar": 3,
        "endLine": 309,
        "endChar": 65
      },
      "revId": "00c2cd9bd299ded9ed9b5fa9b83b443cec927cb4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "365a69e4_54664f4e",
        "filename": "x/mongo/driver/operation.go",
        "patchSetId": 8
      },
      "lineNbr": 309,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-05-10T17:26:56Z",
      "side": 1,
      "message": "Not sure what you mean. The command monitoring spec says \"The driver MUST guarantee that every CommandStartedEvent has either a correlating CommandSucceededEvent or CommandFailedEvent.\" Because the initial command generated a CommandStartedEvent, we should be calling publishFinishedEvent before doing the retry.",
      "parentUuid": "7c16bd38_c0a7536b",
      "range": {
        "startLine": 309,
        "startChar": 3,
        "endLine": 309,
        "endChar": 65
      },
      "revId": "00c2cd9bd299ded9ed9b5fa9b83b443cec927cb4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e5d0d2f_13b27535",
        "filename": "x/mongo/driver/operation.go",
        "patchSetId": 8
      },
      "lineNbr": 309,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-05-10T21:52:09Z",
      "side": 1,
      "message": "Oh it\u0027s in the retryable writes specification.",
      "parentUuid": "365a69e4_54664f4e",
      "range": {
        "startLine": 309,
        "startChar": 3,
        "endLine": 309,
        "endChar": 65
      },
      "revId": "00c2cd9bd299ded9ed9b5fa9b83b443cec927cb4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45de54df_9cf15807",
        "filename": "x/mongo/driver/operation.go",
        "patchSetId": 8
      },
      "lineNbr": 309,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-05-13T14:24:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6e5d0d2f_13b27535",
      "range": {
        "startLine": 309,
        "startChar": 3,
        "endLine": 309,
        "endChar": 65
      },
      "revId": "00c2cd9bd299ded9ed9b5fa9b83b443cec927cb4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39175b69_b90375a0",
        "filename": "x/mongo/driver/operation.go",
        "patchSetId": 8
      },
      "lineNbr": 333,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-05-10T14:54:16Z",
      "side": 1,
      "message": "Can we return ErrUnacknowledgedWrite here? Also, how is this going to work for batch splitting? As far as I understand, this will break out of the loop after writing the first batch.",
      "range": {
        "startLine": 333,
        "startChar": 4,
        "endLine": 333,
        "endChar": 9
      },
      "revId": "00c2cd9bd299ded9ed9b5fa9b83b443cec927cb4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec0f89c6_d681d8e9",
        "filename": "x/mongo/driver/operation.go",
        "patchSetId": 8
      },
      "lineNbr": 333,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-05-10T21:52:09Z",
      "side": 1,
      "message": "No because we don\u0027t want to end the loop early. This break is scoped to the switch statement. We return ErrUnacknowledWrite at the end.",
      "parentUuid": "39175b69_b90375a0",
      "range": {
        "startLine": 333,
        "startChar": 4,
        "endLine": 333,
        "endChar": 9
      },
      "revId": "00c2cd9bd299ded9ed9b5fa9b83b443cec927cb4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18ed03b0_3764ee64",
        "filename": "x/mongo/driver/operation.go",
        "patchSetId": 8
      },
      "lineNbr": 333,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-05-13T14:24:07Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ec0f89c6_d681d8e9",
      "range": {
        "startLine": 333,
        "startChar": 4,
        "endLine": 333,
        "endChar": 9
      },
      "revId": "00c2cd9bd299ded9ed9b5fa9b83b443cec927cb4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b607c83_2b61c0e6",
        "filename": "x/mongo/driver/operation.go",
        "patchSetId": 8
      },
      "lineNbr": 472,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-05-10T14:54:16Z",
      "side": 1,
      "message": "I think we need to discuss how we\u0027re going to handle unacknowledged writes for OP_QUERY. Per yesterday\u0027s conversation with @jeff, we shouldn\u0027t be calling ReadWireMessage synchronously for that case.",
      "range": {
        "startLine": 472,
        "startChar": 1,
        "endLine": 472,
        "endChar": 46
      },
      "revId": "00c2cd9bd299ded9ed9b5fa9b83b443cec927cb4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d29812f6_43c096aa",
        "filename": "x/mongo/driver/operation.go",
        "patchSetId": 8
      },
      "lineNbr": 472,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-05-10T15:59:47Z",
      "side": 1,
      "message": "I think we figured out that we can\u0027t really do that except for the last batch. I think for now we should leave this as is and if someone complains fix it then.",
      "parentUuid": "0b607c83_2b61c0e6",
      "range": {
        "startLine": 472,
        "startChar": 1,
        "endLine": 472,
        "endChar": 46
      },
      "revId": "00c2cd9bd299ded9ed9b5fa9b83b443cec927cb4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "adccb32b_f8995f03",
        "filename": "x/mongo/driver/operation.go",
        "patchSetId": 8
      },
      "lineNbr": 472,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-05-10T17:26:56Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d29812f6_43c096aa",
      "range": {
        "startLine": 472,
        "startChar": 1,
        "endLine": 472,
        "endChar": 46
      },
      "revId": "00c2cd9bd299ded9ed9b5fa9b83b443cec927cb4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "873e9a51_d18f2ce4",
        "filename": "x/mongo/driver/operation.go",
        "patchSetId": 8
      },
      "lineNbr": 695,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-05-10T14:54:16Z",
      "side": 1,
      "message": "Can we make this an int32 in the Operation struct? Not a big deal, but if it\u0027s not used anywhere else, this code would be a little cleaner without the cast. Similar comment for MinimumWriteConcernWireVersion.",
      "range": {
        "startLine": 695,
        "startChar": 108,
        "endLine": 695,
        "endChar": 137
      },
      "revId": "00c2cd9bd299ded9ed9b5fa9b83b443cec927cb4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb2de425_17ab138f",
        "filename": "x/mongo/driver/operation.go",
        "patchSetId": 8
      },
      "lineNbr": 695,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-05-10T15:59:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "873e9a51_d18f2ce4",
      "range": {
        "startLine": 695,
        "startChar": 108,
        "endLine": 695,
        "endChar": 137
      },
      "revId": "00c2cd9bd299ded9ed9b5fa9b83b443cec927cb4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "91ba7b57_85d4c282",
        "filename": "x/mongo/driver/operation/find.go",
        "patchSetId": 8
      },
      "lineNbr": 109,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-05-10T14:54:16Z",
      "side": 1,
      "message": "Why the extra blank lines?",
      "revId": "00c2cd9bd299ded9ed9b5fa9b83b443cec927cb4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f20a4c4f_187b7f7e",
        "filename": "x/mongo/driver/operation/find.go",
        "patchSetId": 8
      },
      "lineNbr": 109,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-05-10T15:59:47Z",
      "side": 1,
      "message": "In general, blank lines in generated code are likely due to the templates. While we can fix them eventually, it\u0027s not something we should spend time on now.",
      "parentUuid": "91ba7b57_85d4c282",
      "revId": "00c2cd9bd299ded9ed9b5fa9b83b443cec927cb4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84357ba1_fb1f6010",
        "filename": "x/mongo/driver/operation/find.go",
        "patchSetId": 8
      },
      "lineNbr": 109,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-05-10T17:26:56Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f20a4c4f_187b7f7e",
      "revId": "00c2cd9bd299ded9ed9b5fa9b83b443cec927cb4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a107518_2dda2e64",
        "filename": "x/mongo/driver/operation/find.go",
        "patchSetId": 8
      },
      "lineNbr": 200,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-05-10T14:54:16Z",
      "side": 1,
      "message": "For consistency throughout the code base, I think we should either remove these checks or add corresponding checks to the options code. It doesn\u0027t make sense to me to have them in one set of builders but not another.",
      "range": {
        "startLine": 197,
        "startChar": 1,
        "endLine": 200,
        "endChar": 0
      },
      "revId": "00c2cd9bd299ded9ed9b5fa9b83b443cec927cb4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de73c6d9_bc197e24",
        "filename": "x/mongo/driver/operation/find.go",
        "patchSetId": 8
      },
      "lineNbr": 200,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-05-10T15:59:47Z",
      "side": 1,
      "message": "I\u0027m fine with changing them in options code, but I think we should definitely keep them here.",
      "parentUuid": "7a107518_2dda2e64",
      "range": {
        "startLine": 197,
        "startChar": 1,
        "endLine": 200,
        "endChar": 0
      },
      "revId": "00c2cd9bd299ded9ed9b5fa9b83b443cec927cb4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a02b9856_b6d15e3c",
        "filename": "x/mongo/driver/operation/find.go",
        "patchSetId": 8
      },
      "lineNbr": 200,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-05-10T17:26:56Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "de73c6d9_bc197e24",
      "range": {
        "startLine": 197,
        "startChar": 1,
        "endLine": 200,
        "endChar": 0
      },
      "revId": "00c2cd9bd299ded9ed9b5fa9b83b443cec927cb4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a6af5df1_60f2cde2",
        "filename": "x/mongo/driver/operation/insert.go",
        "patchSetId": 8
      },
      "lineNbr": 48,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-05-10T14:54:16Z",
      "side": 1,
      "message": "Can this function be private?",
      "range": {
        "startLine": 48,
        "startChar": 5,
        "endLine": 48,
        "endChar": 22
      },
      "revId": "00c2cd9bd299ded9ed9b5fa9b83b443cec927cb4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4af228e8_d8ae4bd9",
        "filename": "x/mongo/driver/operation/insert.go",
        "patchSetId": 8
      },
      "lineNbr": 48,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-05-10T15:59:47Z",
      "side": 1,
      "message": "Sure.",
      "parentUuid": "a6af5df1_60f2cde2",
      "range": {
        "startLine": 48,
        "startChar": 5,
        "endLine": 48,
        "endChar": 22
      },
      "revId": "00c2cd9bd299ded9ed9b5fa9b83b443cec927cb4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}