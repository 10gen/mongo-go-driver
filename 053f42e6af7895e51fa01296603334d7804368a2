{
  "comments": [
    {
      "key": {
        "uuid": "304e43e9_28c8b93d",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 2
      },
      "lineNbr": 57,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-09T03:08:45Z",
      "side": 1,
      "message": "possible not possbile",
      "range": {
        "startLine": 57,
        "startChar": 32,
        "endLine": 57,
        "endChar": 40
      },
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "acb6cec4_df3de61d",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 2
      },
      "lineNbr": 57,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-11T17:13:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "304e43e9_28c8b93d",
      "range": {
        "startLine": 57,
        "startChar": 32,
        "endLine": 57,
        "endChar": 40
      },
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "34f835c6_5ec955c1",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 2
      },
      "lineNbr": 57,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-14T18:52:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "acb6cec4_df3de61d",
      "range": {
        "startLine": 57,
        "startChar": 32,
        "endLine": 57,
        "endChar": 40
      },
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a9127aca_8c257d9d",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-09T03:08:45Z",
      "side": 1,
      "message": "Given the number of options, would it make more sense to group them by their function rather than alphabetically?  I find it hard to follow when something like ZlibLevel is so far from Compressors.",
      "range": {
        "startLine": 58,
        "startChar": 0,
        "endLine": 58,
        "endChar": 4
      },
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7fc25fb4_eacb77f1",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-11T17:13:08Z",
      "side": 1,
      "message": "I think for the most part users who need to use these directly will know what they\u0027re looking for or use the Set* methods. I doubt many people will want to mess with pointers.",
      "parentUuid": "a9127aca_8c257d9d",
      "range": {
        "startLine": 58,
        "startChar": 0,
        "endLine": 58,
        "endChar": 4
      },
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3ad4f98_76d3d53e",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-11T22:51:46Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7fc25fb4_eacb77f1",
      "range": {
        "startLine": 58,
        "startChar": 0,
        "endLine": 58,
        "endChar": 4
      },
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a99d3cc_f283896e",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-14T18:52:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a3ad4f98_76d3d53e",
      "range": {
        "startLine": 58,
        "startChar": 0,
        "endLine": 58,
        "endChar": 4
      },
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2f96145_d4b0a5a7",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-09T03:08:45Z",
      "side": 1,
      "message": "Is this used for anything? If not, remove it.",
      "range": {
        "startLine": 63,
        "startChar": 1,
        "endLine": 63,
        "endChar": 9
      },
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09837fdb_51da20a1",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-11T17:13:08Z",
      "side": 1,
      "message": "So I removed this, but users will have to specifically set AuthSource if they want to change which database they authenticate against.",
      "parentUuid": "e2f96145_d4b0a5a7",
      "range": {
        "startLine": 63,
        "startChar": 1,
        "endLine": 63,
        "endChar": 9
      },
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d873027d_99b26717",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-11T22:51:46Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "09837fdb_51da20a1",
      "range": {
        "startLine": 63,
        "startChar": 1,
        "endLine": 63,
        "endChar": 9
      },
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27d03c47_239a05b9",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-14T18:52:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d873027d_99b26717",
      "range": {
        "startLine": 63,
        "startChar": 1,
        "endLine": 63,
        "endChar": 9
      },
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ca50a90_dd3e3343",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-09T03:08:45Z",
      "side": 1,
      "message": "This is the only field that\u0027s abbreviated.  Let\u0027s be consistent and not abbreviate it.",
      "range": {
        "startLine": 68,
        "startChar": 1,
        "endLine": 68,
        "endChar": 16
      },
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3dfab6ed_45cd78c6",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-11T17:13:08Z",
      "side": 1,
      "message": "We use App and Auth, which are also abbreviations.",
      "parentUuid": "9ca50a90_dd3e3343",
      "range": {
        "startLine": 68,
        "startChar": 1,
        "endLine": 68,
        "endChar": 16
      },
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9edbc09e_287b83a3",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-14T18:58:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3dfab6ed_45cd78c6",
      "range": {
        "startLine": 68,
        "startChar": 1,
        "endLine": 68,
        "endChar": 16
      },
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed50a813_9a2ca576",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 2
      },
      "lineNbr": 71,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-09T03:08:45Z",
      "side": 1,
      "message": "This seems redundant to the Auth field",
      "range": {
        "startLine": 71,
        "startChar": 0,
        "endLine": 71,
        "endChar": 1
      },
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec36d9d9_366221ff",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 2
      },
      "lineNbr": 71,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-11T17:13:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ed50a813_9a2ca576",
      "range": {
        "startLine": 71,
        "startChar": 0,
        "endLine": 71,
        "endChar": 1
      },
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b8385c6f_d1008a89",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 2
      },
      "lineNbr": 71,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-11T22:51:46Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ec36d9d9_366221ff",
      "range": {
        "startLine": 71,
        "startChar": 0,
        "endLine": 71,
        "endChar": 1
      },
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "303e9d5a_bb9c0f3b",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 2
      },
      "lineNbr": 71,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-14T18:52:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b8385c6f_d1008a89",
      "range": {
        "startLine": 71,
        "startChar": 0,
        "endLine": 71,
        "endChar": 1
      },
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0c9e924a_2185ca1a",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 2
      },
      "lineNbr": 78,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-09T03:08:45Z",
      "side": 1,
      "message": "Perhaps Direct instead of Single, to go along with \"connect\u003ddirect\" in the URI",
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b8f1ce2_cd7d2f8c",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 2
      },
      "lineNbr": 78,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-11T17:13:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0c9e924a_2185ca1a",
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bdbbffb9_ea04f908",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 2
      },
      "lineNbr": 78,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-11T22:51:46Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "3b8f1ce2_cd7d2f8c",
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "274f111f_2fc19a14",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 2
      },
      "lineNbr": 78,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-14T18:52:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bdbbffb9_ea04f908",
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "29db7654_0877c538",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 2
      },
      "lineNbr": 81,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-09T03:08:45Z",
      "side": 1,
      "message": "This seems redundant to the Auth field",
      "range": {
        "startLine": 81,
        "startChar": 1,
        "endLine": 81,
        "endChar": 9
      },
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7242a35f_63deaad3",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 2
      },
      "lineNbr": 81,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-11T17:13:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "29db7654_0877c538",
      "range": {
        "startLine": 81,
        "startChar": 1,
        "endLine": 81,
        "endChar": 9
      },
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b246bf24_d2d3e327",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 2
      },
      "lineNbr": 81,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-11T22:51:46Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7242a35f_63deaad3",
      "range": {
        "startLine": 81,
        "startChar": 1,
        "endLine": 81,
        "endChar": 9
      },
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54d426c4_f6a22741",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 2
      },
      "lineNbr": 81,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-14T18:52:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b246bf24_d2d3e327",
      "range": {
        "startLine": 81,
        "startChar": 1,
        "endLine": 81,
        "endChar": 9
      },
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b601e6f_1666ea3f",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 2
      },
      "lineNbr": 83,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-09T03:08:45Z",
      "side": 1,
      "message": "Maybe generalize to CompressorLevel?  Zstd also has a level, and if we ever want to configure it we\u0027d have to add a ZstdLevel.  Gets messy quickly.  Alternatively, create some abstraction for the compressor configuration that this could live inside.",
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "477a987f_73b5668c",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 2
      },
      "lineNbr": 83,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-11T17:13:08Z",
      "side": 1,
      "message": "Since you\u0027ll be able to set both Zlib and ZStd level we\u0027ll need both.",
      "parentUuid": "6b601e6f_1666ea3f",
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3464c363_129b8ced",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 2
      },
      "lineNbr": 83,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-11T22:51:46Z",
      "side": 1,
      "message": "How about the alternative I suggested then?  Have a Compressor struct that contains some generic way of setting compressor options, similar to the way auth mechanism options works.  I would just hate to see us have to add any more compressor-specific fields to ClientOptions.",
      "parentUuid": "477a987f_73b5668c",
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "777934cd_54d458aa",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 2
      },
      "lineNbr": 83,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-12T15:48:30Z",
      "side": 1,
      "message": "It seems like that\u0027s something that would cause confusion. What does level mean for snappy? If it\u0027s set do we just ignore it or error on it? I think it\u0027s difficult here as well because the compressor information is used in multiple ways: it\u0027s sent directly to the server as an array of strings and it\u0027s used to create compressors that are attached to each connection.",
      "parentUuid": "3464c363_129b8ced",
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a950f9dc_ca9302eb",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 2
      },
      "lineNbr": 83,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-14T18:52:31Z",
      "side": 1,
      "message": "If we end up with more compressor config, we can revisit this.  Resolving",
      "parentUuid": "777934cd_54d458aa",
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e169ab70_272e93fa",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-09T03:08:45Z",
      "side": 1,
      "message": "I still prefer to not make this chainable if it means that the options struct has to have an err field.  Who\u0027s supposed to check that field?  I would think that NewClient would do it, but it doesn\u0027t seem to.  Is the application supposed to check it before creating MongoClient?  If so, that seems onerous and easy to forget.",
      "range": {
        "startLine": 96,
        "startChar": 2,
        "endLine": 96,
        "endChar": 3
      },
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ebf05769_d52d8894",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-11T17:13:08Z",
      "side": 1,
      "message": "Client.configure checks it, it\u0027s the first thing it does.",
      "parentUuid": "e169ab70_272e93fa",
      "range": {
        "startLine": 96,
        "startChar": 2,
        "endLine": 96,
        "endChar": 3
      },
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e2edcc8_fa8824a6",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-11T22:51:46Z",
      "side": 1,
      "message": "How did I miss that... \n\nStill though, a public Err field is odd to see on an options struct.  Is the issue that you want applications to be able to do a one-liner like:\n\n   NewClient(options.Client().ApplyURI(cs.String()))\n\n?  What if we were to add a new function like\n\n   NewClientFromURI(\"mongodb://localhost...\")\n\nThat way applications only have to add an extra error check if they want to combine a URI with other options (perhaps not so common a use case).",
      "parentUuid": "ebf05769_d52d8894",
      "range": {
        "startLine": 96,
        "startChar": 2,
        "endLine": 96,
        "endChar": 3
      },
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed4bb3d3_01639883",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-12T15:48:30Z",
      "side": 1,
      "message": "One of the reasons we moved the URI to the options is because having it as an argument caused issues with overriding. I think there\u0027s a good chance users will want to register a Registry, which means they\u0027ll have to go back to the old way.\n\nI don\u0027t find having an Err field on the struct any stranger than having pointers to ints. We could make the field private, but I don\u0027t see the point. If users wish to check the error themselves why shouldn\u0027t they be able to?\n\nAs I stated before, I want to keep the amount of error checking down. It\u0027s excessive to have users check for a URI error and then also check for an error from NewClient.",
      "parentUuid": "0e2edcc8_fa8824a6",
      "range": {
        "startLine": 96,
        "startChar": 2,
        "endLine": 96,
        "endChar": 3
      },
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2004015c_3d221a4b",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2019-02-12T17:40:52Z",
      "side": 1,
      "message": "I think having the Err settable is problematic. If we don\u0027t want ApplyURI to return an error and we don\u0027t want a settable public error, then make `err` private and have a method. It could be called `Err()` or create a method called `Validate()` that could be used for more things in the future other than just checking if an error exists or not.",
      "parentUuid": "ed4bb3d3_01639883",
      "range": {
        "startLine": 96,
        "startChar": 2,
        "endLine": 96,
        "endChar": 3
      },
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb6c1ff5_39a3f994",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-12T19:35:00Z",
      "side": 1,
      "message": "That works for me. I\u0027ve updated the patch.",
      "parentUuid": "2004015c_3d221a4b",
      "range": {
        "startLine": 96,
        "startChar": 2,
        "endLine": 96,
        "endChar": 3
      },
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f077f25_9b2c2a47",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-14T18:52:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bb6c1ff5_39a3f994",
      "range": {
        "startLine": 96,
        "startChar": 2,
        "endLine": 96,
        "endChar": 3
      },
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b655fa5_167d18e1",
        "filename": "mongo/options/clientoptions_1_9.go",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-09T02:16:25Z",
      "side": 1,
      "message": "Let\u0027s delete all this code, though not clear what the stub should return.",
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6348358a_56bdb5f4",
        "filename": "mongo/options/clientoptions_1_9.go",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-09T03:08:45Z",
      "side": 1,
      "message": "To clarify: since we support Go 1.10 and up, we shouldn\u0027t have to support this code.",
      "parentUuid": "5b655fa5_167d18e1",
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9497ca8_23658add",
        "filename": "mongo/options/clientoptions_1_9.go",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-11T17:13:08Z",
      "side": 1,
      "message": "We can just return an empty string. I\u0027ll mark it as a dependency for Evergreen to compile on 1.8.",
      "parentUuid": "6348358a_56bdb5f4",
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a1da9df_620a4401",
        "filename": "mongo/options/clientoptions_1_9.go",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-14T18:52:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a9497ca8_23658add",
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96b9cd41_6cd91c6b",
        "filename": "mongo/options/clientoptions_test.go",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-09T03:08:45Z",
      "side": 1,
      "message": "Add a similarly comprehensive test of ApplyURI",
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "765f830f_4a6081e3",
        "filename": "mongo/options/clientoptions_test.go",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-11T17:13:08Z",
      "side": 1,
      "message": "As I said in the comment for patch set 1 these are being pushed soon.",
      "parentUuid": "96b9cd41_6cd91c6b",
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0fa3043_fbda5a3b",
        "filename": "mongo/options/clientoptions_test.go",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-11T22:51:46Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "765f830f_4a6081e3",
      "revId": "053f42e6af7895e51fa01296603334d7804368a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}