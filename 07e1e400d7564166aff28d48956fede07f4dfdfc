{
  "comments": [
    {
      "key": {
        "uuid": "ae484e54_1d86fb1a",
        "filename": "mongo/cursor.go",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2019-01-22T20:20:27Z",
      "side": 1,
      "message": "I feel like this isn\u0027t something that belongs in the cursor implementation. It should be a wrapper around this cursor rather. But as I\u0027m looking at this cursor design and it might be somewhat difficult to compose another cursor with this one, which feels like a problem to me.  I should be able to wrap another implementation of a cursor around this and delegate to it, but I don\u0027t believe that is possible here as I don\u0027t have access to any of the things I\u0027d need to make it happen, specifically current.\n\nMaybe not a big deal, but it means that I can\u0027t create a different cursor for listCollections wrapping around this one.",
      "revId": "07e1e400d7564166aff28d48956fede07f4dfdfc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2220b5c0_d4e83bbf",
        "filename": "mongo/database.go",
        "patchSetId": 1
      },
      "lineNbr": 259,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-01-22T20:45:50Z",
      "side": 1,
      "message": "Iirc, the cursor should only be a special list collections cursor for legacy server versions. Doing this for all server versions would cause a collection name like \"foo.bar\" to be reported as \"bar\" on non-legacy versions.",
      "range": {
        "startLine": 259,
        "startChar": 24,
        "endLine": 259,
        "endChar": 25
      },
      "revId": "07e1e400d7564166aff28d48956fede07f4dfdfc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33be8c25_3123f54c",
        "filename": "mongo/database.go",
        "patchSetId": 1
      },
      "lineNbr": 259,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-01-22T20:57:23Z",
      "side": 1,
      "message": "Yeah, this is wrong, the batch cursor would be the thing that needs this behavior, not the cursor.",
      "parentUuid": "2220b5c0_d4e83bbf",
      "range": {
        "startLine": 259,
        "startChar": 24,
        "endLine": 259,
        "endChar": 25
      },
      "revId": "07e1e400d7564166aff28d48956fede07f4dfdfc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d0d5ad6_9c9b2e83",
        "filename": "x/mongo/driver/batch_cursor.go",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2019-01-22T20:20:27Z",
      "side": 1,
      "message": "Is it possible that the server may send an Int32? This seems like a perfect place to call AsInt64() and have it upconvert automatically.",
      "revId": "07e1e400d7564166aff28d48956fede07f4dfdfc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8315162a_82cdb228",
        "filename": "x/mongo/driver/batch_cursor.go",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-01-22T20:57:23Z",
      "side": 1,
      "message": "This is the logic we have right now and I\u0027m pretty sure it\u0027s guaranteed to be an Int64.",
      "parentUuid": "5d0d5ad6_9c9b2e83",
      "revId": "07e1e400d7564166aff28d48956fede07f4dfdfc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6888111_f4a100cf",
        "filename": "x/mongo/driver/batch_cursor.go",
        "patchSetId": 1
      },
      "lineNbr": 221,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2019-01-22T20:20:27Z",
      "side": 1,
      "message": "I don\u0027t see any consumers of this method. When will this get used and by whom?",
      "revId": "07e1e400d7564166aff28d48956fede07f4dfdfc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95383d42_c1b6a018",
        "filename": "x/mongo/driver/batch_cursor.go",
        "patchSetId": 1
      },
      "lineNbr": 221,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-01-22T20:57:23Z",
      "side": 1,
      "message": "This is a new 4.2+ feature and we need to expose it because the postBatchResumeToken needs to be exposed to the user. There is no other way to provide it to the user because it\u0027s a part of the cursor body.",
      "parentUuid": "e6888111_f4a100cf",
      "revId": "07e1e400d7564166aff28d48956fede07f4dfdfc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a735be90_e8807dd8",
        "filename": "x/mongo/driver/batch_cursor.go",
        "patchSetId": 1
      },
      "lineNbr": 221,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-01-22T21:01:35Z",
      "side": 1,
      "message": "OK, but let\u0027s add it when we have some spec tests that will exercise the code path.  We don\u0027t need this for 1.0 GA afaik.",
      "parentUuid": "95383d42_c1b6a018",
      "revId": "07e1e400d7564166aff28d48956fede07f4dfdfc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f78311c_09328100",
        "filename": "x/mongo/driver/batch_cursor.go",
        "patchSetId": 1
      },
      "lineNbr": 221,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-01-22T22:28:56Z",
      "side": 1,
      "message": "It\u0027s been merged into the spec already: https://github.com/mongodb/specifications/blob/master/source/change-streams/change-streams.rst#exposing-all-resume-tokens.\n\nAlso, Stitch was one of the main pushers for this feature, so I\u0027d like to have this as close to ready to go as soon as possible (e.g. I don\u0027t want to have to revisit this type and add methods to it right after we just did it and then plumb it through the interfaces later).",
      "parentUuid": "a735be90_e8807dd8",
      "revId": "07e1e400d7564166aff28d48956fede07f4dfdfc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee6e536c_c04763b7",
        "filename": "x/mongo/driver/batch_cursor.go",
        "patchSetId": 1
      },
      "lineNbr": 221,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2019-01-22T22:46:54Z",
      "side": 1,
      "message": "I\u0027m cool with it being here, but is stitch using a BatchCursor? Or a cursor from the driver? Because the mongo.Cursor class doesn\u0027t expose this.",
      "parentUuid": "9f78311c_09328100",
      "revId": "07e1e400d7564166aff28d48956fede07f4dfdfc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}