{
  "comments": [
    {
      "key": {
        "uuid": "e2d7d750_f2bce79f",
        "filename": "core/command/aggregate.go",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1014457
      },
      "writtenOn": "2018-06-14T21:11:58Z",
      "side": 1,
      "message": "It seemed to make the most sense for this to be Optioner since the options passed in were of type option.Optioner alternatively they could all be option.AggregateOptioner",
      "revId": "0ed5ac02e9a469826fc7245991a7ec4a81f895ab",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64ed08c9_d41bfbb7",
        "filename": "core/command/aggregate.go",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2018-06-15T17:57:37Z",
      "side": 1,
      "message": "This should still be option.AggregateOptioner. There will be future work to split apart the cursor optioners, but right now the way it was was fine because all CursorOptioners are also AggregateOptioners.",
      "parentUuid": "e2d7d750_f2bce79f",
      "revId": "0ed5ac02e9a469826fc7245991a7ec4a81f895ab",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "212c3cfb_897bf9e8",
        "filename": "mongo/collection.go",
        "patchSetId": 1
      },
      "lineNbr": 423,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2018-06-15T16:16:10Z",
      "side": 1,
      "message": "How do we pass 0 options? If you give nil, line 441 will panic.",
      "revId": "0ed5ac02e9a469826fc7245991a7ec4a81f895ab",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4bcd3a41_53ee9d1f",
        "filename": "mongo/collection.go",
        "patchSetId": 1
      },
      "lineNbr": 423,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2018-06-15T17:57:37Z",
      "side": 1,
      "message": "This needs to be variadic. The design doc also gives example code for how to handle the opts parameter:\n\n    func (coll *Collection) Foo(ctx context.Context, opt ...foopt.Foo) error {\n        optopt :\u003d fooopt.BundleFoo(opt...).Unbundle(true)\n        for _, opt :\u003d range optopt {\n            // Do something with the options...\n        }\n    }",
      "parentUuid": "212c3cfb_897bf9e8",
      "revId": "0ed5ac02e9a469826fc7245991a7ec4a81f895ab",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}