{
  "comments": [
    {
      "key": {
        "uuid": "7d6483b1_5d5cf01e",
        "filename": "benchmark/multi.go",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2018-06-21T17:47:47Z",
      "side": 1,
      "message": "Just realized I don\u0027t quite understand this.  Since the caller is responsible for enforcing the execution time limit for the benchmark, it seems like the setup code (in this case up until line 40) will be included in that time limit.  If that\u0027s how it works, it seems wrong.  In the worst case the timed benchmark code won\u0027t execute at all.  Let me know if I\u0027m misunderstanding.  I\u0027m not too familiar with how context works",
      "range": {
        "startLine": 11,
        "startChar": 1,
        "endLine": 11,
        "endChar": 4
      },
      "revId": "14ac968ab09f949d5760880f390b240707b3d3bc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10f076f1_a3af7017",
        "filename": "benchmark/multi.go",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1014178
      },
      "writtenOn": "2018-06-21T18:20:46Z",
      "side": 1,
      "message": "the tm.ResetTimeer() call zeros the time accounting before the actual measurement begins. \n\nthis context, and cancel ensures that we do any cleanup (e.g. the connection) if we return early because of an error.",
      "parentUuid": "7d6483b1_5d5cf01e",
      "range": {
        "startLine": 11,
        "startChar": 1,
        "endLine": 11,
        "endChar": 4
      },
      "revId": "14ac968ab09f949d5760880f390b240707b3d3bc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1eb63555_cc7e469b",
        "filename": "benchmark/multi.go",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2018-06-22T19:05:45Z",
      "side": 1,
      "message": "Your comment doesn\u0027t address my concern.  We\u0027ve agreed though to defer this to a separate ticket.",
      "parentUuid": "10f076f1_a3af7017",
      "range": {
        "startLine": 11,
        "startChar": 1,
        "endLine": 11,
        "endChar": 4
      },
      "revId": "14ac968ab09f949d5760880f390b240707b3d3bc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c539dced_5abd31b9",
        "filename": "benchmark/multi.go",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2018-06-21T17:47:47Z",
      "side": 1,
      "message": "The spec says \"Retrieve (and discard) all documents from the cursor.\"  Since the go driver separates iteration from retrieval, this should call Cursor.Decode as well.",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 51,
        "endChar": 1
      },
      "revId": "14ac968ab09f949d5760880f390b240707b3d3bc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "823416ed_3ff0498a",
        "filename": "benchmark/multi.go",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1014178
      },
      "writtenOn": "2018-06-21T18:20:46Z",
      "side": 1,
      "message": "cursor.Decode would force us to do bson serialization, which isn\u0027t a thing we do for any other tests. I suppose we could just read them out into bson.Readers? \n\nIf we iterate but don\u0027t retrieve isn\u0027t the only piece that we\u0027re missing the bson serialization (we have to pull the bytes off of the socket, which seems like this implementation is consistent with the spec.",
      "parentUuid": "c539dced_5abd31b9",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 51,
        "endChar": 1
      },
      "revId": "14ac968ab09f949d5760880f390b240707b3d3bc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48e904d6_5e1a918f",
        "filename": "benchmark/multi.go",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2018-06-22T17:26:39Z",
      "side": 1,
      "message": "We can use cursor.DecodeBytes here to just get the bytes back.",
      "parentUuid": "823416ed_3ff0498a",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 51,
        "endChar": 1
      },
      "revId": "14ac968ab09f949d5760880f390b240707b3d3bc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e8ea6ca_d80ce33e",
        "filename": "benchmark/multi.go",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1014178
      },
      "writtenOn": "2018-06-22T17:33:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "48e904d6_5e1a918f",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 51,
        "endChar": 1
      },
      "revId": "14ac968ab09f949d5760880f390b240707b3d3bc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50d58a4a_70094b2b",
        "filename": "benchmark/multi.go",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2018-06-22T19:05:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6e8ea6ca_d80ce33e",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 51,
        "endChar": 1
      },
      "revId": "14ac968ab09f949d5760880f390b240707b3d3bc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}