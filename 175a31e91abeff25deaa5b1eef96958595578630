{
  "comments": [
    {
      "key": {
        "uuid": "39bc296f_0b0fc8a8",
        "filename": "core/command/command.go",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2018-08-15T14:41:30Z",
      "side": 1,
      "message": "Can we use a switch statement instead of an if block? I think it\u0027ll be a little easier to understand.",
      "range": {
        "startLine": 23,
        "startChar": 1,
        "endLine": 23,
        "endChar": 41
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df21515c_41ed69f5",
        "filename": "core/command/command.go",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1014457
      },
      "writtenOn": "2018-08-16T14:31:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "39bc296f_0b0fc8a8",
      "range": {
        "startLine": 23,
        "startChar": 1,
        "endLine": 23,
        "endChar": 41
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c007e7e4_159b8385",
        "filename": "core/command/command.go",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-08-15T22:25:07Z",
      "side": 1,
      "message": "So we are going to UnmarshalBSON so that we can MarshalBSON back on line 36?",
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af92375b_971a18ea",
        "filename": "core/command/command.go",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1014457
      },
      "writtenOn": "2018-08-16T14:31:07Z",
      "side": 1,
      "message": "Yeah this was left over from when we did OP_MSG.  I changed it to just set the rdr directly to converted.Document, and it works",
      "parentUuid": "c007e7e4_159b8385",
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c0d4215b_3ee02d3d",
        "filename": "core/command/command.go",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-08-16T18:08:21Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "af92375b_971a18ea",
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1671af8e_d88b2db6",
        "filename": "core/command/command.go",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2018-08-15T14:41:30Z",
      "side": 1,
      "message": "I don\u0027t think we should return two errors here. The consumer can check the type of the error to determine if it\u0027s a parsing error or if it\u0027s a command.Error.",
      "range": {
        "startLine": 60,
        "startChar": 36,
        "endLine": 60,
        "endChar": 48
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fbe7bfa9_88a0ed8a",
        "filename": "core/command/command.go",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1014457
      },
      "writtenOn": "2018-08-16T14:31:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1671af8e_d88b2db6",
      "range": {
        "startLine": 60,
        "startChar": 36,
        "endLine": 60,
        "endChar": 48
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5de4943a_82f89156",
        "filename": "core/command/errors.go",
        "patchSetId": 1
      },
      "lineNbr": 121,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-08-15T22:25:07Z",
      "side": 1,
      "message": "Can we prefix this with Is?\n\nIsWriteConcernErrorRetryable(...)",
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "717e94d7_e4641150",
        "filename": "core/command/errors.go",
        "patchSetId": 1
      },
      "lineNbr": 121,
      "author": {
        "id": 1014457
      },
      "writtenOn": "2018-08-16T14:31:07Z",
      "side": 1,
      "message": "Sure, though I thought Go style usually preferred avoiding prefixes like \"get\", \"set\", \"is\", \"has\", no?",
      "parentUuid": "5de4943a_82f89156",
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cddc2e25_8a30268c",
        "filename": "core/command/errors.go",
        "patchSetId": 1
      },
      "lineNbr": 121,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-08-16T18:08:21Z",
      "side": 1,
      "message": "Ack. I\u0027ll let Kris speak to that. The method right below this one starts with Is, so I was looking at consistency.",
      "parentUuid": "717e94d7_e4641150",
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bee0d43c_e9924c29",
        "filename": "core/command/insert.go",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-08-15T22:25:07Z",
      "side": 1,
      "message": "does this need to be exported?",
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69cb8606_aeb6810b",
        "filename": "core/command/insert.go",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1014457
      },
      "writtenOn": "2018-08-16T14:31:07Z",
      "side": 1,
      "message": "nope.  Changed to private.",
      "parentUuid": "bee0d43c_e9924c29",
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4af9e6a6_470edf14",
        "filename": "core/command/insert.go",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-08-16T18:08:21Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "69cb8606_aeb6810b",
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "babb3fb3_6e2cbba0",
        "filename": "core/command/insert.go",
        "patchSetId": 1
      },
      "lineNbr": 199,
      "author": {
        "id": 1014457
      },
      "writtenOn": "2018-08-14T15:19:06Z",
      "side": 1,
      "message": "This logic basically attempts to retry the last write the last batch that failed (previous successful batches aren\u0027t retried).  It increments the transaction number along with each batch. This is how I interpreted the spec with regard to multiple writes (https://github.com/mongodb/specifications/blob/master/source/retryable-writes/retryable-writes.rst#executing-retryable-write-commands), but let me know if this needs to be changed.",
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8bb53ce6_3833802b",
        "filename": "core/command/insert.go",
        "patchSetId": 1
      },
      "lineNbr": 199,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-08-16T18:08:21Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "babb3fb3_6e2cbba0",
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8c4f6746_60e5a3c0",
        "filename": "core/command/insert.go",
        "patchSetId": 1
      },
      "lineNbr": 222,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-08-15T22:25:07Z",
      "side": 1,
      "message": "what type of errors are these going to be and should we always retry them?",
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6f6a41f_2e4fe2a6",
        "filename": "core/command/insert.go",
        "patchSetId": 1
      },
      "lineNbr": 222,
      "author": {
        "id": 1014457
      },
      "writtenOn": "2018-08-16T14:31:07Z",
      "side": 1,
      "message": "It looks like we can ignore most of these errors since all retryable errors that we know of will be discovered in roundtrip and when we look at the writeconcern error I guess.",
      "parentUuid": "8c4f6746_60e5a3c0",
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa449d87_9b377c90",
        "filename": "core/command/insert.go",
        "patchSetId": 1
      },
      "lineNbr": 222,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-08-16T18:08:21Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c6f6a41f_2e4fe2a6",
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c937d61f_d83dc280",
        "filename": "core/command/opmsg.go",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2018-08-15T14:41:30Z",
      "side": 1,
      "message": "This is a good example of why we should only return one error. I think in almost all cases we would just return the resulting error or further inspect it.",
      "range": {
        "startLine": 45,
        "startChar": 1,
        "endLine": 45,
        "endChar": 40
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c34d8be_82e03d1a",
        "filename": "core/command/opmsg.go",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1014457
      },
      "writtenOn": "2018-08-16T14:31:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c937d61f_d83dc280",
      "range": {
        "startLine": 45,
        "startChar": 1,
        "endLine": 45,
        "endChar": 40
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3cc90be3_520df0c7",
        "filename": "core/command/write.go",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2018-08-15T14:41:30Z",
      "side": 1,
      "message": "It seems like this information should be able to be carried in the Session itself.",
      "range": {
        "startLine": 24,
        "startChar": 1,
        "endLine": 24,
        "endChar": 18
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad64673a_63cec20c",
        "filename": "core/command/write.go",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1014457
      },
      "writtenOn": "2018-08-16T14:31:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3cc90be3_520df0c7",
      "range": {
        "startLine": 24,
        "startChar": 1,
        "endLine": 24,
        "endChar": 18
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39bf49a7_dbd80cea",
        "filename": "core/command/write.go",
        "patchSetId": 1
      },
      "lineNbr": 214,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2018-08-15T14:41:30Z",
      "side": 1,
      "message": "This seems really strange, that a dependency of this package might return an error from this package. I know that since it\u0027s an interface it\u0027s possible, it just feels like a code smell.",
      "range": {
        "startLine": 212,
        "startChar": 2,
        "endLine": 214,
        "endChar": 3
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "188b849f_02944e5b",
        "filename": "core/command/write.go",
        "patchSetId": 1
      },
      "lineNbr": 214,
      "author": {
        "id": 1014457
      },
      "writtenOn": "2018-08-16T14:31:07Z",
      "side": 1,
      "message": "Yeah, I was a bit surprised that this was the case - also slightly confused why this didn\u0027t pop up when I ran the evergreen patch for transactions since this was a change in transactions.  I will investigate this further.",
      "parentUuid": "39bf49a7_dbd80cea",
      "range": {
        "startLine": 212,
        "startChar": 2,
        "endLine": 214,
        "endChar": 3
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8217084a_5c586b51",
        "filename": "core/dispatch/delete.go",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2018-08-15T14:41:30Z",
      "side": 1,
      "message": "Is there a reason this and the else statement aren\u0027t just one if statement? The code within them is the same.",
      "range": {
        "startLine": 57,
        "startChar": 1,
        "endLine": 57,
        "endChar": 91
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ce361b5_76c78fa6",
        "filename": "core/dispatch/delete.go",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1014457
      },
      "writtenOn": "2018-08-16T14:31:07Z",
      "side": 1,
      "message": "basically one returns an empty result while the other returns the result with the error.  I don\u0027t actually think it matters so I\u0027ll merge the two branches and just return both the result and error.",
      "parentUuid": "8217084a_5c586b51",
      "range": {
        "startLine": 57,
        "startChar": 1,
        "endLine": 57,
        "endChar": 91
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ffefff3f_a26ef748",
        "filename": "core/dispatch/find_one_and_delete.go",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-08-15T22:25:07Z",
      "side": 1,
      "message": "This feels really weird. It might be required because of the interaction between command and dispatch, but mutating the fields on something provided to us is odd. Isn\u0027t RetryWriter set by a user at a high level?\n\nAnd yeah, we do this elsewhere (above with cmd.Session).  It all feels wrong to me...",
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "248b9c58_8b7244df",
        "filename": "core/dispatch/find_one_and_delete.go",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1014457
      },
      "writtenOn": "2018-08-16T14:31:07Z",
      "side": 1,
      "message": "The whole mutating fields on things provided to us is an antipattern used all over the driver, especially with command.  I anticipate this problem being at least partially resolved when command/dispatch get refactored into two pieces.  I suppose we could have collection.go check to see what retrywrites should be set to, but I wasn\u0027t sure if that was the right level to put that logic.  Let me know what you think would be best.",
      "parentUuid": "ffefff3f_a26ef748",
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82b770ce_90371ae3",
        "filename": "core/dispatch/find_one_and_delete.go",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-08-16T18:08:21Z",
      "side": 1,
      "message": "oy... yeah, so now we are mutating the command\u0027s session. Which is also weird... who sets it back to it\u0027s old value after we are done?\n\nIf you can inject this in from the collection (which knows about the user\u0027s choice) and we don\u0027t need to mutate this thing at all, that\u0027d be ideal. Might be worth discussing with Kris if it\u0027s worth messing with this now or making sure it gets handled during the network refactor.",
      "parentUuid": "248b9c58_8b7244df",
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70cd7c6d_0794bb8c",
        "filename": "core/dispatch/find_one_and_delete.go",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1014457
      },
      "writtenOn": "2018-08-16T19:09:52Z",
      "side": 1,
      "message": "Just talked to Kris.  so turns out changing cmd here doesn\u0027t actually mutate the command since it\u0027s being passed by value.  However we are mutating the session which is sort of weird.  Unfortunately command does need to know about retryable writes because it needs to know when to append a transaction number.  Kris says ultimately we want command to not have to worry about that (i.e. we should provide some metadata for command and command should just worry about serializing it and the actual logic should be moved up to dispatch) so we\u0027ll ultimately resolve this in the refactor.  I will leave a TODO",
      "parentUuid": "82b770ce_90371ae3",
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b184908b_23f100ff",
        "filename": "core/dispatch/insert.go",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2018-08-15T20:00:38Z",
      "side": 1,
      "message": "I don\u0027t think originalErr can be nil if ok is true.",
      "range": {
        "startLine": 57,
        "startChar": 51,
        "endLine": 57,
        "endChar": 62
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "392a4563_425b4a64",
        "filename": "core/dispatch/insert.go",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1014457
      },
      "writtenOn": "2018-08-16T14:31:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b184908b_23f100ff",
      "range": {
        "startLine": 57,
        "startChar": 51,
        "endLine": 57,
        "endChar": 62
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53e3c962_7f28ed5d",
        "filename": "core/dispatch/insert.go",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2018-08-15T20:00:38Z",
      "side": 1,
      "message": "Why does this return res but on line 62 it returns result.Insert{}",
      "range": {
        "startLine": 71,
        "startChar": 10,
        "endLine": 71,
        "endChar": 13
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee88ce05_6e75a730",
        "filename": "core/dispatch/insert.go",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 1014457
      },
      "writtenOn": "2018-08-16T14:31:07Z",
      "side": 1,
      "message": "This *technically* ensures it is consistent with original functionality but now that I think about it res will probably be nil (or empty result) anyway so might as well return res with err and merge the two if branches.",
      "parentUuid": "53e3c962_7f28ed5d",
      "range": {
        "startLine": 71,
        "startChar": 10,
        "endLine": 71,
        "endChar": 13
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc35d2b7_d43cd14d",
        "filename": "core/dispatch/write.go",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2018-08-15T20:00:38Z",
      "side": 1,
      "message": "Why do we have to check both the topology and the description?  Can the former be removed?",
      "range": {
        "startLine": 75,
        "startChar": 1,
        "endLine": 75,
        "endChar": 7
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9e2d2a7_5c039bd5",
        "filename": "core/dispatch/write.go",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1014457
      },
      "writtenOn": "2018-08-16T14:31:07Z",
      "side": 1,
      "message": "This is an issue with how we check for session support.  One has the wire version while the other has the logicalsessiontimeout.  The topology is responsible for ensuring the sessiontimeout value is correct while wireversions are only associated with particular servers.",
      "parentUuid": "dc35d2b7_d43cd14d",
      "range": {
        "startLine": 75,
        "startChar": 1,
        "endLine": 75,
        "endChar": 7
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "69a70502_7a8d96e9",
        "filename": "core/dispatch/write.go",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2018-08-16T17:48:04Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d9e2d2a7_5c039bd5",
      "range": {
        "startLine": 75,
        "startChar": 1,
        "endLine": 75,
        "endChar": 7
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "20aa64f7_53eb4dea",
        "filename": "core/topology/connection.go",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2018-08-15T14:41:30Z",
      "side": 1,
      "message": "Why do we only go this path for OP_MSG and not for OP_REPLY as well?",
      "range": {
        "startLine": 34,
        "startChar": 22,
        "endLine": 34,
        "endChar": 42
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35d336b6_a6b5b654",
        "filename": "core/topology/connection.go",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1014457
      },
      "writtenOn": "2018-08-16T14:31:07Z",
      "side": 1,
      "message": "should be for both.  fixed.",
      "parentUuid": "20aa64f7_53eb4dea",
      "range": {
        "startLine": 34,
        "startChar": 22,
        "endLine": 34,
        "endChar": 42
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5104f25b_9fc94f34",
        "filename": "core/topology/connection.go",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2018-08-15T14:41:30Z",
      "side": 1,
      "message": "I don\u0027t think we should actually return this error and should let code at a higher level handle the decoding. I don\u0027t think it\u0027s too big of an issue to decode an error twice. If it turns out to be a performance concern we can revisit this later.",
      "range": {
        "startLine": 35,
        "startChar": 2,
        "endLine": 35,
        "endChar": 32
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce1b6085_76273ff6",
        "filename": "core/topology/connection.go",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1014457
      },
      "writtenOn": "2018-08-16T14:31:07Z",
      "side": 1,
      "message": "This is actually a mistake because of name shadowing (whoops!).  I\u0027ll rename it.",
      "parentUuid": "5104f25b_9fc94f34",
      "range": {
        "startLine": 35,
        "startChar": 2,
        "endLine": 35,
        "endChar": 32
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f4756d09_f51f39ce",
        "filename": "core/topology/connection.go",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2018-08-15T20:00:38Z",
      "side": 1,
      "message": "See https://github.com/mongodb/specifications/blob/master/source/server-discovery-and-monitoring/server-discovery-and-monitoring.rst#error-handling.  There are more cases that should invalidate the server (and clear the pool as well).",
      "range": {
        "startLine": 49,
        "startChar": 8,
        "endLine": 49,
        "endChar": 9
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9bc1a62b_6d408226",
        "filename": "core/topology/connection.go",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1014457
      },
      "writtenOn": "2018-08-16T14:31:07Z",
      "side": 1,
      "message": "I\u0027ve added some more checking for not master and recovering errors, but it seems like there\u0027s a lot more logic and without tests I can\u0027t be sure if the error logic I\u0027m putting is correct (also not even sure if this is supposed to be where we put it, although I didn\u0027t find the error handling logic anywhere in topology/server).  Would it make sense to work on this in a separate CR and open a ticket to implement sdam error handling?",
      "parentUuid": "f4756d09_f51f39ce",
      "range": {
        "startLine": 49,
        "startChar": 8,
        "endLine": 49,
        "endChar": 9
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1dae95f_1d16dcfb",
        "filename": "core/topology/connection.go",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2018-08-16T17:48:04Z",
      "side": 1,
      "message": "That\u0027s a good idea.  Just link the ticket here and then resolve this.",
      "parentUuid": "9bc1a62b_6d408226",
      "range": {
        "startLine": 49,
        "startChar": 8,
        "endLine": 49,
        "endChar": 9
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce85bb7a_acbe1182",
        "filename": "core/topology/connection.go",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2018-08-15T20:00:38Z",
      "side": 1,
      "message": "Will this also clear the connection pool?  It\u0027s supposed to.",
      "range": {
        "startLine": 53,
        "startChar": 2,
        "endLine": 53,
        "endChar": 4
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f18a1ea_5cd401ab",
        "filename": "core/topology/connection.go",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1014457
      },
      "writtenOn": "2018-08-16T14:31:07Z",
      "side": 1,
      "message": "Yes, updateDescription() calls pool.Drain() if the server Kind is unknown.",
      "parentUuid": "ce85bb7a_acbe1182",
      "range": {
        "startLine": 53,
        "startChar": 2,
        "endLine": 53,
        "endChar": 4
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b21fb32b_027e4632",
        "filename": "core/topology/connection.go",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2018-08-16T17:48:04Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "9f18a1ea_5cd401ab",
      "range": {
        "startLine": 53,
        "startChar": 2,
        "endLine": 53,
        "endChar": 4
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2ccd100_b8efa75a",
        "filename": "mongo/client.go",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2018-08-15T20:00:38Z",
      "side": 1,
      "message": "Support for retryWrites should also be added to ConnString",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 39,
        "endChar": 1
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70729901_06e92ae7",
        "filename": "mongo/client.go",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1014457
      },
      "writtenOn": "2018-08-16T14:31:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e2ccd100_b8efa75a",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 39,
        "endChar": 1
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}