{
  "comments": [
    {
      "key": {
        "uuid": "39bc296f_0b0fc8a8",
        "filename": "core/command/command.go",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2018-08-15T14:41:30Z",
      "side": 1,
      "message": "Can we use a switch statement instead of an if block? I think it\u0027ll be a little easier to understand.",
      "range": {
        "startLine": 23,
        "startChar": 1,
        "endLine": 23,
        "endChar": 41
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c007e7e4_159b8385",
        "filename": "core/command/command.go",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-08-15T22:25:07Z",
      "side": 1,
      "message": "So we are going to UnmarshalBSON so that we can MarshalBSON back on line 36?",
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1671af8e_d88b2db6",
        "filename": "core/command/command.go",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2018-08-15T14:41:30Z",
      "side": 1,
      "message": "I don\u0027t think we should return two errors here. The consumer can check the type of the error to determine if it\u0027s a parsing error or if it\u0027s a command.Error.",
      "range": {
        "startLine": 60,
        "startChar": 36,
        "endLine": 60,
        "endChar": 48
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5de4943a_82f89156",
        "filename": "core/command/errors.go",
        "patchSetId": 1
      },
      "lineNbr": 121,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-08-15T22:25:07Z",
      "side": 1,
      "message": "Can we prefix this with Is?\n\nIsWriteConcernErrorRetryable(...)",
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bee0d43c_e9924c29",
        "filename": "core/command/insert.go",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-08-15T22:25:07Z",
      "side": 1,
      "message": "does this need to be exported?",
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "babb3fb3_6e2cbba0",
        "filename": "core/command/insert.go",
        "patchSetId": 1
      },
      "lineNbr": 199,
      "author": {
        "id": 1014457
      },
      "writtenOn": "2018-08-14T15:19:06Z",
      "side": 1,
      "message": "This logic basically attempts to retry the last write the last batch that failed (previous successful batches aren\u0027t retried).  It increments the transaction number along with each batch. This is how I interpreted the spec with regard to multiple writes (https://github.com/mongodb/specifications/blob/master/source/retryable-writes/retryable-writes.rst#executing-retryable-write-commands), but let me know if this needs to be changed.",
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c4f6746_60e5a3c0",
        "filename": "core/command/insert.go",
        "patchSetId": 1
      },
      "lineNbr": 222,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-08-15T22:25:07Z",
      "side": 1,
      "message": "what type of errors are these going to be and should we always retry them?",
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c937d61f_d83dc280",
        "filename": "core/command/opmsg.go",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2018-08-15T14:41:30Z",
      "side": 1,
      "message": "This is a good example of why we should only return one error. I think in almost all cases we would just return the resulting error or further inspect it.",
      "range": {
        "startLine": 45,
        "startChar": 1,
        "endLine": 45,
        "endChar": 40
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3cc90be3_520df0c7",
        "filename": "core/command/write.go",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2018-08-15T14:41:30Z",
      "side": 1,
      "message": "It seems like this information should be able to be carried in the Session itself.",
      "range": {
        "startLine": 24,
        "startChar": 1,
        "endLine": 24,
        "endChar": 18
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39bf49a7_dbd80cea",
        "filename": "core/command/write.go",
        "patchSetId": 1
      },
      "lineNbr": 214,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2018-08-15T14:41:30Z",
      "side": 1,
      "message": "This seems really strange, that a dependency of this package might return an error from this package. I know that since it\u0027s an interface it\u0027s possible, it just feels like a code smell.",
      "range": {
        "startLine": 212,
        "startChar": 2,
        "endLine": 214,
        "endChar": 3
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8217084a_5c586b51",
        "filename": "core/dispatch/delete.go",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2018-08-15T14:41:30Z",
      "side": 1,
      "message": "Is there a reason this and the else statement aren\u0027t just one if statement? The code within them is the same.",
      "range": {
        "startLine": 57,
        "startChar": 1,
        "endLine": 57,
        "endChar": 91
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffefff3f_a26ef748",
        "filename": "core/dispatch/find_one_and_delete.go",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-08-15T22:25:07Z",
      "side": 1,
      "message": "This feels really weird. It might be required because of the interaction between command and dispatch, but mutating the fields on something provided to us is odd. Isn\u0027t RetryWriter set by a user at a high level?\n\nAnd yeah, we do this elsewhere (above with cmd.Session).  It all feels wrong to me...",
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b184908b_23f100ff",
        "filename": "core/dispatch/insert.go",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2018-08-15T20:00:38Z",
      "side": 1,
      "message": "I don\u0027t think originalErr can be nil if ok is true.",
      "range": {
        "startLine": 57,
        "startChar": 51,
        "endLine": 57,
        "endChar": 62
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53e3c962_7f28ed5d",
        "filename": "core/dispatch/insert.go",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2018-08-15T20:00:38Z",
      "side": 1,
      "message": "Why does this return res but on line 62 it returns result.Insert{}",
      "range": {
        "startLine": 71,
        "startChar": 10,
        "endLine": 71,
        "endChar": 13
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc35d2b7_d43cd14d",
        "filename": "core/dispatch/write.go",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2018-08-15T20:00:38Z",
      "side": 1,
      "message": "Why do we have to check both the topology and the description?  Can the former be removed?",
      "range": {
        "startLine": 75,
        "startChar": 1,
        "endLine": 75,
        "endChar": 7
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20aa64f7_53eb4dea",
        "filename": "core/topology/connection.go",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2018-08-15T14:41:30Z",
      "side": 1,
      "message": "Why do we only go this path for OP_MSG and not for OP_REPLY as well?",
      "range": {
        "startLine": 34,
        "startChar": 22,
        "endLine": 34,
        "endChar": 42
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5104f25b_9fc94f34",
        "filename": "core/topology/connection.go",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2018-08-15T14:41:30Z",
      "side": 1,
      "message": "I don\u0027t think we should actually return this error and should let code at a higher level handle the decoding. I don\u0027t think it\u0027s too big of an issue to decode an error twice. If it turns out to be a performance concern we can revisit this later.",
      "range": {
        "startLine": 35,
        "startChar": 2,
        "endLine": 35,
        "endChar": 32
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4756d09_f51f39ce",
        "filename": "core/topology/connection.go",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2018-08-15T20:00:38Z",
      "side": 1,
      "message": "See https://github.com/mongodb/specifications/blob/master/source/server-discovery-and-monitoring/server-discovery-and-monitoring.rst#error-handling.  There are more cases that should invalidate the server (and clear the pool as well).",
      "range": {
        "startLine": 49,
        "startChar": 8,
        "endLine": 49,
        "endChar": 9
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce85bb7a_acbe1182",
        "filename": "core/topology/connection.go",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2018-08-15T20:00:38Z",
      "side": 1,
      "message": "Will this also clear the connection pool?  It\u0027s supposed to.",
      "range": {
        "startLine": 53,
        "startChar": 2,
        "endLine": 53,
        "endChar": 4
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2ccd100_b8efa75a",
        "filename": "mongo/client.go",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2018-08-15T20:00:38Z",
      "side": 1,
      "message": "Support for retryWrites should also be added to ConnString",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 39,
        "endChar": 1
      },
      "revId": "175a31e91abeff25deaa5b1eef96958595578630",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}