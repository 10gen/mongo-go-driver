{
  "comments": [
    {
      "key": {
        "uuid": "1c59a7e1_a57ed483",
        "filename": "core/result/result.go",
        "patchSetId": 10
      },
      "lineNbr": 68,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-04-26T19:08:54Z",
      "side": 1,
      "message": "this should probably be a *bson.Document",
      "revId": "26864de8056f922de1d8d39a5a5c7bea3633823c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e42c6104_9ac51e1d",
        "filename": "core/result/result.go",
        "patchSetId": 10
      },
      "lineNbr": 68,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2018-04-26T19:17:38Z",
      "side": 1,
      "message": "We can change this to bson.Reader as well.",
      "parentUuid": "1c59a7e1_a57ed483",
      "revId": "26864de8056f922de1d8d39a5a5c7bea3633823c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b8db6a7_7843bd5f",
        "filename": "core/result/result.go",
        "patchSetId": 10
      },
      "lineNbr": 68,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-04-26T19:26:35Z",
      "side": 1,
      "message": "You could make it a bson.Reader I guess. However, it has already been unmarshalled. It is the thing that WriteConcernError was unmarshalled from. In affect, you are reading out 2 special fields from the document (code and errmsg), and then adding the whole document in.\n\nwc :\u003d result.Lookup(\"writeConcern\")\nreturn \u0026WriteConcernError{\n  Code: wc.Lookup(\"code\").ToInt32(),\n  ErrMsg: wc.Lookup(\"errmsg\").ToString(),\n  Details: wc,\n}\n\nI\u0027ve got the syntax wrong, but you get the gist. There are other ways of doing this I think, but the above is the simplest.\n\ntype WriteConcernError *bson.Document\n\nfunc (wce *WriteConcernError) Code() int32 {\n  return wce.Lookup(\"code\").ToInt32()\n}",
      "parentUuid": "e42c6104_9ac51e1d",
      "revId": "26864de8056f922de1d8d39a5a5c7bea3633823c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4f5c5dd_510980ef",
        "filename": "core/result/result.go",
        "patchSetId": 10
      },
      "lineNbr": 68,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-04-26T19:44:07Z",
      "side": 1,
      "message": "This code is wrong and a bad interpretation. It appears that this is how python works, but .NET does it differently. Discussed with Kris on slack.",
      "parentUuid": "6b8db6a7_7843bd5f",
      "revId": "26864de8056f922de1d8d39a5a5c7bea3633823c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "405a195a_643135a7",
        "filename": "mongo/errors.go",
        "patchSetId": 10
      },
      "lineNbr": 62,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-04-26T19:08:54Z",
      "side": 1,
      "message": "why interface{}?",
      "revId": "26864de8056f922de1d8d39a5a5c7bea3633823c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fcbcc1d2_21b57f35",
        "filename": "mongo/errors.go",
        "patchSetId": 10
      },
      "lineNbr": 62,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2018-04-26T19:17:38Z",
      "side": 1,
      "message": "I don\u0027t quite know what is returned for this or the structure of a document, we could return a bson.Reader instead.",
      "parentUuid": "405a195a_643135a7",
      "revId": "26864de8056f922de1d8d39a5a5c7bea3633823c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee95d9d3_e9eb437a",
        "filename": "mongo/errors.go",
        "patchSetId": 10
      },
      "lineNbr": 117,
      "author": {
        "id": 1014178
      },
      "writtenOn": "2018-04-26T17:54:38Z",
      "side": 1,
      "message": "I think we need to put the write error case above the write concern error.",
      "revId": "26864de8056f922de1d8d39a5a5c7bea3633823c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}