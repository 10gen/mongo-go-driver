{
  "comments": [
    {
      "key": {
        "uuid": "4d62e5e5_4294d170",
        "filename": "bson/bsonrw/extjson_parser.go",
        "patchSetId": 1
      },
      "lineNbr": 166,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-11-28T15:02:07Z",
      "side": 1,
      "message": "This change was previously validated in validateToken through the call above to advanceState. If we are here with jpsSawBeginObject, it means that we are sitting in a non-first top-level document.",
      "revId": "3a34591560ceb2a5fe448ee3899cd28e2cfbfafb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b612bb3_982479f4",
        "filename": "bson/bsonrw/extjson_parser.go",
        "patchSetId": 1
      },
      "lineNbr": 166,
      "author": {
        "id": 1014927
      },
      "writtenOn": "2018-11-28T16:11:36Z",
      "side": 1,
      "message": "Ah, I see. Should we add a comment here explaining that as well? Just reading these lines of code, it implies something like: `{ \"a\": 1 {` is okay. Obviously this is not and would be caught by validateToken via advanceState (due to the depth), but a note along the lines of \"allow another key-value pair,OR another top-level object\" could be helpful here.",
      "parentUuid": "4d62e5e5_4294d170",
      "revId": "3a34591560ceb2a5fe448ee3899cd28e2cfbfafb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e0d207b_ad8e5468",
        "filename": "bson/bsonrw/extjson_parser.go",
        "patchSetId": 1
      },
      "lineNbr": 166,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-11-28T21:46:19Z",
      "side": 1,
      "message": "It\u0027s not `{ \"a\": 1 {` that is implied here... it\u0027s `{ \"a\": 1 }{ \"b\": 2}` is implied to be valid. Which it isn\u0027t at a depth level \u003e 0 or if we are inside an array. This is exactly what is validated by validateToken. I\u0027ve added a comment.",
      "parentUuid": "7b612bb3_982479f4",
      "revId": "3a34591560ceb2a5fe448ee3899cd28e2cfbfafb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3213968_c20dc4c1",
        "filename": "bson/bsonrw/extjson_parser.go",
        "patchSetId": 1
      },
      "lineNbr": 170,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-11-28T15:02:07Z",
      "side": 1,
      "message": "This was a separate issue that is also fixed. Previously, reading a document a second time, even when only 1 document existed, would result in successfully reading an empty second document due to the nature of how the ExtJSONValueReader functions. Instead of returning ErrEOD, we\u0027ll actually return EOF to signal that the stream is done and no document was found.",
      "revId": "3a34591560ceb2a5fe448ee3899cd28e2cfbfafb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ecc869fc_de904140",
        "filename": "bson/bsonrw/extjson_parser.go",
        "patchSetId": 1
      },
      "lineNbr": 170,
      "author": {
        "id": 1014927
      },
      "writtenOn": "2018-11-28T16:11:36Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d3213968_c20dc4c1",
      "revId": "3a34591560ceb2a5fe448ee3899cd28e2cfbfafb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "45a406af_6dbdb22c",
        "filename": "bson/bsonrw/extjson_parser.go",
        "patchSetId": 1
      },
      "lineNbr": 170,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2018-11-28T20:48:49Z",
      "side": 1,
      "message": "Can you add GODRIVER-611 to the body of the commit message? I believe that this is the bug that was reported there.",
      "parentUuid": "ecc869fc_de904140",
      "revId": "3a34591560ceb2a5fe448ee3899cd28e2cfbfafb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "05cde4ce_8b9d4bf8",
        "filename": "bson/bsonrw/extjson_parser.go",
        "patchSetId": 1
      },
      "lineNbr": 170,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-11-28T21:46:19Z",
      "side": 1,
      "message": "This doesn\u0027t fix that. That is something else. All I\u0027ve proven is that you can manually use a ValueReader to read a top-level array of documents.",
      "parentUuid": "45a406af_6dbdb22c",
      "revId": "3a34591560ceb2a5fe448ee3899cd28e2cfbfafb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ac0c5bf_6864d6e4",
        "filename": "bson/bsonrw/extjson_parser.go",
        "patchSetId": 1
      },
      "lineNbr": 170,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2018-11-28T23:55:42Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "05cde4ce_8b9d4bf8",
      "revId": "3a34591560ceb2a5fe448ee3899cd28e2cfbfafb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "13c3d6f4_132d32b2",
        "filename": "bson/bsonrw/extjson_reader_test.go",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2018-11-28T20:48:49Z",
      "side": 1,
      "message": "Can we use backticks here so we don\u0027t have to escape the double quotes?",
      "range": {
        "startLine": 28,
        "startChar": 3,
        "endLine": 28,
        "endChar": 16
      },
      "revId": "3a34591560ceb2a5fe448ee3899cd28e2cfbfafb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3034b70b_36a68e75",
        "filename": "bson/bsonrw/extjson_reader_test.go",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-11-28T21:46:19Z",
      "side": 1,
      "message": "I can\u0027t do that for all these because some of these have newline characters, which can\u0027t be added when using backticks. I\u0027ve opted to be consistent and always escape the quotes in this test.",
      "parentUuid": "13c3d6f4_132d32b2",
      "range": {
        "startLine": 28,
        "startChar": 3,
        "endLine": 28,
        "endChar": 16
      },
      "revId": "3a34591560ceb2a5fe448ee3899cd28e2cfbfafb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a75523a4_9e5d369b",
        "filename": "bson/bsonrw/extjson_reader_test.go",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2018-11-28T23:55:42Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "3034b70b_36a68e75",
      "range": {
        "startLine": 28,
        "startChar": 3,
        "endLine": 28,
        "endChar": 16
      },
      "revId": "3a34591560ceb2a5fe448ee3899cd28e2cfbfafb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}