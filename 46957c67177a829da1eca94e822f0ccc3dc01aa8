{
  "comments": [
    {
      "key": {
        "uuid": "e6d9f27e_72948d27",
        "filename": "mongo/collection.go",
        "patchSetId": 3
      },
      "lineNbr": 706,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-05T18:44:42Z",
      "side": 1,
      "message": "Tangentially related, but: is write concern any different from read concern in the way it needs to be handled?",
      "revId": "46957c67177a829da1eca94e822f0ccc3dc01aa8",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "271cc444_69364210",
        "filename": "mongo/collection.go",
        "patchSetId": 3
      },
      "lineNbr": 710,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-05T18:44:42Z",
      "side": 1,
      "message": "Can you explain what you\u0027re trying to achieve in this conditional?  I\u0027m not clear why the parentheses aren\u0027t around\n\n      sess.TransactionInProgress || sess.TransactionStarting()\n\nrather than\n\n      sess.TransactionStarting() \u0026\u0026 sess.CurrentRc \u003d\u003d null\n\n\nI\u0027d expect those two txn states to be treated the same, and be replaced by a call to \n\n    func (c *Client) TransactionRunning() bool\n\nI\u0027m also not clear where the txn options\u0027 read concern is applied to the command in the case where it is non-nil. Can you point me to the spot?",
      "range": {
        "startLine": 710,
        "startChar": 0,
        "endLine": 710,
        "endChar": 1
      },
      "revId": "46957c67177a829da1eca94e822f0ccc3dc01aa8",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ea64d6e_62dcca91",
        "filename": "mongo/collection.go",
        "patchSetId": 3
      },
      "lineNbr": 710,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-05T18:44:42Z",
      "side": 1,
      "message": "However this conditional ends up, extract it into a method with a descriptive name and call the method from all the places where it appears.",
      "range": {
        "startLine": 710,
        "startChar": 4,
        "endLine": 710,
        "endChar": 105
      },
      "revId": "46957c67177a829da1eca94e822f0ccc3dc01aa8",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}