{
  "comments": [
    {
      "key": {
        "uuid": "a65a06e9_a02a51ce",
        "filename": "mongo/collection.go",
        "patchSetId": 1
      },
      "lineNbr": 487,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-05-21T18:52:51Z",
      "side": 1,
      "message": "\"arrayFilters\"",
      "range": {
        "startLine": 487,
        "startChar": 0,
        "endLine": 487,
        "endChar": 1
      },
      "revId": "4b97f33992ce76ee51006cdbf25754761add7785",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "785ebbc9_a9c1f20a",
        "filename": "mongo/collection.go",
        "patchSetId": 1
      },
      "lineNbr": 487,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-05-21T19:44:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a65a06e9_a02a51ce",
      "range": {
        "startLine": 487,
        "startChar": 0,
        "endLine": 487,
        "endChar": 1
      },
      "revId": "4b97f33992ce76ee51006cdbf25754761add7785",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c34ef6c0_b41a34d0",
        "filename": "mongo/collection.go",
        "patchSetId": 1
      },
      "lineNbr": 487,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-05-21T21:29:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "785ebbc9_a9c1f20a",
      "range": {
        "startLine": 487,
        "startChar": 0,
        "endLine": 487,
        "endChar": 1
      },
      "revId": "4b97f33992ce76ee51006cdbf25754761add7785",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3371cc38_6b0a2876",
        "filename": "mongo/collection.go",
        "patchSetId": 1
      },
      "lineNbr": 542,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-05-21T18:52:51Z",
      "side": 1,
      "message": "What are we going to do for bulkWrite, where there can be a mix of updateOne and updateMany requests?  \n\nI think it\u0027s best to ignore multi here, and let the operation figure out what to do.",
      "range": {
        "startLine": 542,
        "startChar": 0,
        "endLine": 542,
        "endChar": 1
      },
      "revId": "4b97f33992ce76ee51006cdbf25754761add7785",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c307ca8d_2c8c238d",
        "filename": "mongo/collection.go",
        "patchSetId": 1
      },
      "lineNbr": 542,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-05-21T19:44:53Z",
      "side": 1,
      "message": "Operation and/or drivergen will have to change to support the bulkWrite behavior because right now, an Operation\u0027s retryability is considered fixed. The smallest change will probably be to allow the higher level to specify retryability at a per-command level rather than once for the whole Operation, in which case this code won\u0027t change much.",
      "parentUuid": "3371cc38_6b0a2876",
      "range": {
        "startLine": 542,
        "startChar": 0,
        "endLine": 542,
        "endChar": 1
      },
      "revId": "4b97f33992ce76ee51006cdbf25754761add7785",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da568ac3_61a10d0f",
        "filename": "mongo/collection.go",
        "patchSetId": 1
      },
      "lineNbr": 542,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-05-21T21:29:13Z",
      "side": 1,
      "message": "Leaving this open for now, since there is some follow-on work that has to be done.",
      "parentUuid": "c307ca8d_2c8c238d",
      "range": {
        "startLine": 542,
        "startChar": 0,
        "endLine": 542,
        "endChar": 1
      },
      "revId": "4b97f33992ce76ee51006cdbf25754761add7785",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81a9558d_4eec04fe",
        "filename": "mongo/collection.go",
        "patchSetId": 1
      },
      "lineNbr": 542,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-05-28T18:11:48Z",
      "side": 1,
      "message": "We control the splitting of operations, so wouldn\u0027t we just have updateOne and updateMany requests in two different operations? The driver.Operation type really shouldn\u0027t be looking inside the command document structure to figure out what it should be doing.",
      "parentUuid": "da568ac3_61a10d0f",
      "range": {
        "startLine": 542,
        "startChar": 0,
        "endLine": 542,
        "endChar": 1
      },
      "revId": "4b97f33992ce76ee51006cdbf25754761add7785",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c75e1189_739629ec",
        "filename": "mongo/collection.go",
        "patchSetId": 1
      },
      "lineNbr": 584,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-05-21T18:52:51Z",
      "side": 1,
      "message": "v2?",
      "range": {
        "startLine": 584,
        "startChar": 0,
        "endLine": 584,
        "endChar": 1
      },
      "revId": "4b97f33992ce76ee51006cdbf25754761add7785",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "864f8c3b_c91f7152",
        "filename": "mongo/collection.go",
        "patchSetId": 1
      },
      "lineNbr": 584,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-05-21T19:44:53Z",
      "side": 1,
      "message": "While we\u0027re cutting over all of the operations, we can\u0027t cut over helpers like ensureDollarKey to use bsoncore.Document instead of bsonx.Doc because they\u0027re used in other places, so I made ensureDollarKeyv2 for bsoncore. The naming isn\u0027t great (maybe ensureDollarKeyBsoncore would be better) but it\u0027s a private function and will be removed as soon as everything\u0027s cut over.",
      "parentUuid": "c75e1189_739629ec",
      "range": {
        "startLine": 584,
        "startChar": 0,
        "endLine": 584,
        "endChar": 1
      },
      "revId": "4b97f33992ce76ee51006cdbf25754761add7785",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8deea6bb_4c9eaaae",
        "filename": "mongo/collection.go",
        "patchSetId": 1
      },
      "lineNbr": 584,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-05-21T21:29:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "864f8c3b_c91f7152",
      "range": {
        "startLine": 584,
        "startChar": 0,
        "endLine": 584,
        "endChar": 1
      },
      "revId": "4b97f33992ce76ee51006cdbf25754761add7785",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "defec069_3995d6af",
        "filename": "mongo/options/mongooptions.go",
        "patchSetId": 1
      },
      "lineNbr": 130,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-05-21T18:52:51Z",
      "side": 1,
      "message": "It seems really low level for mongooptions to know what a BSON array looks like (the fact that it\u0027s just a BSON document with integral keys).  Why can\u0027t we continue to use ToArray?",
      "revId": "4b97f33992ce76ee51006cdbf25754761add7785",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7932019e_bbfff6b4",
        "filename": "mongo/options/mongooptions.go",
        "patchSetId": 1
      },
      "lineNbr": 130,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-05-21T19:44:53Z",
      "side": 1,
      "message": "mongo/ in general is going to have to move to bsoncore, which currently requires knowing this. I think bsoncore has a BuildArray(...bsoncore.Value) function but that would mean putting all of the values for the filters in a slice just to pass that slice to BuildArray, which seemed unnecessary. Maybe bsoncore will have to obtain helpers in the future that allow us to do this without knowing exactly what a BSON array is.",
      "parentUuid": "defec069_3995d6af",
      "revId": "4b97f33992ce76ee51006cdbf25754761add7785",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1015962b_36228885",
        "filename": "mongo/options/mongooptions.go",
        "patchSetId": 1
      },
      "lineNbr": 130,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-05-21T21:29:13Z",
      "side": 1,
      "message": "Leaving open as there may be follow-on work here that needs to be tracked",
      "parentUuid": "7932019e_bbfff6b4",
      "revId": "4b97f33992ce76ee51006cdbf25754761add7785",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a745917c_0d83f92b",
        "filename": "mongo/options/mongooptions.go",
        "patchSetId": 1
      },
      "lineNbr": 130,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-05-28T18:11:48Z",
      "side": 1,
      "message": "This might be another thing we have to change in the design of drivergen, how it handles arrays. I think we could have it take a []bsoncore.Value which can then be turned into an array during serialization.",
      "parentUuid": "1015962b_36228885",
      "revId": "4b97f33992ce76ee51006cdbf25754761add7785",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e77f5b1b_51bd8c42",
        "filename": "mongo/options/mongooptions.go",
        "patchSetId": 1
      },
      "lineNbr": 130,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-05-28T18:59:17Z",
      "side": 1,
      "message": "The arrayFilters field has to be in each individual update document, so it\u0027s handled in mongo.Collection rather than operation.Update. I think resolving this depends on resolving a similar issue in Delete operation of handling fields that need to be in each batch document rather once in the operation.",
      "parentUuid": "a745917c_0d83f92b",
      "revId": "4b97f33992ce76ee51006cdbf25754761add7785",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}