{
  "comments": [
    {
      "key": {
        "uuid": "ddc4a416_7082fbb2",
        "filename": "mongo/change_stream_test.go",
        "patchSetId": 3
      },
      "lineNbr": 165,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2018-08-15T16:29:29Z",
      "side": 1,
      "message": "How come we\u0027re skipping this?",
      "range": {
        "startLine": 165,
        "startChar": 0,
        "endLine": 165,
        "endChar": 1
      },
      "revId": "6cd2239df4fe7bf297a3e06a9e37e4c0080049ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50f39ebd_1d592d13",
        "filename": "mongo/change_stream_test.go",
        "patchSetId": 3
      },
      "lineNbr": 165,
      "author": {
        "id": 1014457
      },
      "writtenOn": "2018-08-15T18:32:05Z",
      "side": 1,
      "message": "This test became really flaky for unknown reasons (it would sometimes pass and sometimes fail), and I figured since the changestream code is changing anyway with Divjot\u0027s changes I wasn\u0027t going to investigate it",
      "parentUuid": "ddc4a416_7082fbb2",
      "range": {
        "startLine": 165,
        "startChar": 0,
        "endLine": 165,
        "endChar": 1
      },
      "revId": "6cd2239df4fe7bf297a3e06a9e37e4c0080049ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e611b988_117edf3b",
        "filename": "mongo/transactions_test.go",
        "patchSetId": 3
      },
      "lineNbr": 376,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2018-08-15T16:29:29Z",
      "side": 1,
      "message": "There are expected results for distinct in reads.yml",
      "range": {
        "startLine": 376,
        "startChar": 2,
        "endLine": 376,
        "endChar": 8
      },
      "revId": "6cd2239df4fe7bf297a3e06a9e37e4c0080049ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41f88be4_be7e400b",
        "filename": "mongo/transactions_test.go",
        "patchSetId": 3
      },
      "lineNbr": 376,
      "author": {
        "id": 1014457
      },
      "writtenOn": "2018-08-15T18:32:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e611b988_117edf3b",
      "range": {
        "startLine": 376,
        "startChar": 2,
        "endLine": 376,
        "endChar": 8
      },
      "revId": "6cd2239df4fe7bf297a3e06a9e37e4c0080049ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b8f3cac_55d46ef2",
        "filename": "mongo/transactions_test.go",
        "patchSetId": 3
      },
      "lineNbr": 499,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2018-08-15T16:29:29Z",
      "side": 1,
      "message": "Can you explain this conditional a bit more?  I don\u0027t understand what ErrorLabelsOmit has to do with it.",
      "range": {
        "startLine": 499,
        "startChar": 0,
        "endLine": 499,
        "endChar": 1
      },
      "revId": "6cd2239df4fe7bf297a3e06a9e37e4c0080049ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d443d3e7_f23ba8e6",
        "filename": "mongo/transactions_test.go",
        "patchSetId": 3
      },
      "lineNbr": 499,
      "author": {
        "id": 1014457
      },
      "writtenOn": "2018-08-15T18:32:05Z",
      "side": 1,
      "message": "This is a poorly placed comment, the comment basically says there\u0027s no logic to check errorLabelsOmit because by default a non command.Error error doesn\u0027t have labels.  The if statement is unrelated.",
      "parentUuid": "8b8f3cac_55d46ef2",
      "range": {
        "startLine": 499,
        "startChar": 0,
        "endLine": 499,
        "endChar": 1
      },
      "revId": "6cd2239df4fe7bf297a3e06a9e37e4c0080049ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}