{
  "comments": [
    {
      "key": {
        "uuid": "be6cfa9f_a4998457",
        "filename": "x/mongo/driver/topology/pool.go",
        "patchSetId": 2
      },
      "lineNbr": 185,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-07-01T20:38:38Z",
      "side": 1,
      "message": "We don\u0027t really need to use a separate variable anymore.",
      "range": {
        "startLine": 185,
        "startChar": 1,
        "endLine": 185,
        "endChar": 11
      },
      "revId": "7a4f0b858ddeb083f7b8affb4632dbf94db6f4bd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99f66750_e9035a29",
        "filename": "x/mongo/driver/topology/pool.go",
        "patchSetId": 2
      },
      "lineNbr": 185,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-07-01T20:48:39Z",
      "side": 1,
      "message": "I think I kept it as a spearate variable and had the nc.Close() on line 191 because I didn\u0027t want to call nc.Close() while holding the pool lock. I wasn\u0027t sure how expensive of an operation that would be, but it would likely involve at least one syscall so it\u0027d be a lot more work to do in lock.",
      "parentUuid": "be6cfa9f_a4998457",
      "range": {
        "startLine": 185,
        "startChar": 1,
        "endLine": 185,
        "endChar": 11
      },
      "revId": "7a4f0b858ddeb083f7b8affb4632dbf94db6f4bd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6f66bae_9d066b5e",
        "filename": "x/mongo/driver/topology/pool.go",
        "patchSetId": 2
      },
      "lineNbr": 185,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-07-01T21:11:38Z",
      "side": 1,
      "message": "For context, I did this before because we didn\u0027t have an atomic way to set nc \u003d nil, so I borrowed the lock from the pool to handle this. Now that the connection has an atomic state to switch on we don\u0027t need to borrow the pool\u0027s lock.",
      "parentUuid": "99f66750_e9035a29",
      "range": {
        "startLine": 185,
        "startChar": 1,
        "endLine": 185,
        "endChar": 11
      },
      "revId": "7a4f0b858ddeb083f7b8affb4632dbf94db6f4bd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b93bef0_3e33fd06",
        "filename": "x/mongo/driver/topology/pool.go",
        "patchSetId": 2
      },
      "lineNbr": 185,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-07-01T21:18:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f6f66bae_9d066b5e",
      "range": {
        "startLine": 185,
        "startChar": 1,
        "endLine": 185,
        "endChar": 11
      },
      "revId": "7a4f0b858ddeb083f7b8affb4632dbf94db6f4bd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4ba9010_67cf35f6",
        "filename": "x/mongo/driver/topology/pool.go",
        "patchSetId": 2
      },
      "lineNbr": 186,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-07-01T20:38:38Z",
      "side": 1,
      "message": "I know Isabella already asked you to change this, but instead of doing a Swap just to check the state in one place, can we do an atomic.CompareAndSwapInt32? If it returns true we know that we need to call Close on the net.Conn, if it returns true then we\u0027re already disconnected and we can just return.",
      "range": {
        "startLine": 186,
        "startChar": 10,
        "endLine": 186,
        "endChar": 54
      },
      "revId": "7a4f0b858ddeb083f7b8affb4632dbf94db6f4bd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52536448_fbeef82c",
        "filename": "x/mongo/driver/topology/pool.go",
        "patchSetId": 2
      },
      "lineNbr": 186,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-07-01T20:48:39Z",
      "side": 1,
      "message": "Similar to above: because we explicitly do p.Unlock rather than a defer p.Unlock, adding a conditional return would be something like:\n\np.Lock()\nif !atomic.CompareAndSwapInt32(\u0026c.connected, connected, disconnected) {\n    p.Unlock()\n    return\n}\np.Unlock()\n\nThis doesn\u0027t seem any better to me but I can change it if you think it\u0027s worth it.",
      "parentUuid": "a4ba9010_67cf35f6",
      "range": {
        "startLine": 186,
        "startChar": 10,
        "endLine": 186,
        "endChar": 54
      },
      "revId": "7a4f0b858ddeb083f7b8affb4632dbf94db6f4bd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad8c6db2_01912aa6",
        "filename": "x/mongo/driver/topology/pool.go",
        "patchSetId": 2
      },
      "lineNbr": 186,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-07-01T21:11:38Z",
      "side": 1,
      "message": "I don\u0027t think we need to hold the lock while we do the compare and swap and I don\u0027t think we need to hold the lock while closing the connection. Doing a compare and swap will necessitate that only 1 call to pool.close will ever actually close the connection, the rest will just return.",
      "parentUuid": "52536448_fbeef82c",
      "range": {
        "startLine": 186,
        "startChar": 10,
        "endLine": 186,
        "endChar": 54
      },
      "revId": "7a4f0b858ddeb083f7b8affb4632dbf94db6f4bd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d89a5123_7be2359e",
        "filename": "x/mongo/driver/topology/pool.go",
        "patchSetId": 2
      },
      "lineNbr": 186,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-07-01T21:18:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ad8c6db2_01912aa6",
      "range": {
        "startLine": 186,
        "startChar": 10,
        "endLine": 186,
        "endChar": 54
      },
      "revId": "7a4f0b858ddeb083f7b8affb4632dbf94db6f4bd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d423be4b_59a03363",
        "filename": "x/mongo/driver/topology/pool.go",
        "patchSetId": 2
      },
      "lineNbr": 187,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-07-01T20:38:38Z",
      "side": 1,
      "message": "I don\u0027t think we need to do the atomic operations while holding the pool lock.",
      "range": {
        "startLine": 187,
        "startChar": 1,
        "endLine": 187,
        "endChar": 11
      },
      "revId": "7a4f0b858ddeb083f7b8affb4632dbf94db6f4bd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d4b35d2_4959c2e7",
        "filename": "x/mongo/driver/topology/pool.go",
        "patchSetId": 2
      },
      "lineNbr": 187,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-07-01T21:18:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d423be4b_59a03363",
      "range": {
        "startLine": 187,
        "startChar": 1,
        "endLine": 187,
        "endChar": 11
      },
      "revId": "7a4f0b858ddeb083f7b8affb4632dbf94db6f4bd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f746538d_737c5b1f",
        "filename": "x/mongo/driver/topology/pool.go",
        "patchSetId": 2
      },
      "lineNbr": 191,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-07-01T20:38:38Z",
      "side": 1,
      "message": "We can call c.nc.Close here.",
      "range": {
        "startLine": 191,
        "startChar": 8,
        "endLine": 191,
        "endChar": 18
      },
      "revId": "7a4f0b858ddeb083f7b8affb4632dbf94db6f4bd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15bdc7eb_d4878ab5",
        "filename": "x/mongo/driver/topology/pool.go",
        "patchSetId": 2
      },
      "lineNbr": 191,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-07-01T21:18:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f746538d_737c5b1f",
      "range": {
        "startLine": 191,
        "startChar": 8,
        "endLine": 191,
        "endChar": 18
      },
      "revId": "7a4f0b858ddeb083f7b8affb4632dbf94db6f4bd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}