{
  "comments": [
    {
      "key": {
        "uuid": "bfa40d64_948c58b5",
        "filename": "x/mongo/driver/topology/topology.go",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-01-22T19:51:01Z",
      "side": 1,
      "message": "description.Topology is in an \"x\" package so ideally wouldn\u0027t be exposed in the public API yet.\nConsider instead stringifying a short description of the topology in the error string.  FWIW in Java driver the message is: \n\n\"Timed out after %d ms while waiting to connect. Client view of cluster state is %s\",                                                                                            \n     settings.getServerSelectionTimeout(MILLISECONDS),\n     curDescription.getShortDescription())\n\ngetShortDescription included the topology type, and a description of each server in the topology, in particular its\n\n* address\n* type\n* tag sets\n* state\n* round trip time (if state \u003d\u003d connected)\n* last error",
      "revId": "7e458a93381458d52276eda1d18fa13410f27b36",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b1bb230_dc2fcf21",
        "filename": "x/mongo/driver/topology/topology.go",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-01-22T20:17:38Z",
      "side": 1,
      "message": "Since this is in an error I think it\u0027s okay. After all, this error comes from a package under \"x\".",
      "parentUuid": "bfa40d64_948c58b5",
      "revId": "7e458a93381458d52276eda1d18fa13410f27b36",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1dcf8222_4d52f09b",
        "filename": "x/mongo/driver/topology/topology.go",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-01-22T20:22:25Z",
      "side": 1,
      "message": "I didn\u0027t consider the fact that this exposes errors from x. As for a textual representation, I can update the ServerSelectionError.Error() function to included a stringified topology description. Should we still include the actual description.Topology struct in the error? I did this because I assumed tools would need the description for error handling code, but this could be wrong.",
      "parentUuid": "0b1bb230_dc2fcf21",
      "revId": "7e458a93381458d52276eda1d18fa13410f27b36",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "633ce702_31ea49df",
        "filename": "x/mongo/driver/topology/topology.go",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-01-22T20:29:31Z",
      "side": 1,
      "message": "Regardless of whether we include the Topology struct in the error, including the relevant info in the error string is useful, as it\u0027s probably very common to just log the error string.\n\nNo one has ever asked for programmatic access to the topology iirc.  I don\u0027t see a scenario where you have any recourse to do anything with it, so I don\u0027t think we need to include it.  If we don\u0027t, do we need to define a public struct for this error at all?  Kris is right that the error struct itself is in an x package, so if we don\u0027t include it we don\u0027t need a struct at all.",
      "parentUuid": "1dcf8222_4d52f09b",
      "revId": "7e458a93381458d52276eda1d18fa13410f27b36",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}