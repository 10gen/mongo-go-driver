{
  "comments": [
    {
      "key": {
        "uuid": "28186594_0e15645b",
        "filename": "mongo/gridfs/gridfs_test.go",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-01-10T01:14:57Z",
      "side": 1,
      "message": "This is going to create a new client for every test and call \"Connect\" on it which will use a lot of extra resources for SDAM. You can use either createTestClient() or createTestDatabase() (which internally calls createTestClient()). createTestClient uses the sync library to implement a sort of singleton pattern to share 1 connected client.",
      "range": {
        "startLine": 22,
        "startChar": 22,
        "endLine": 22,
        "endChar": 31
      },
      "revId": "822bf46c9532f210af0f758d5e604e83de8c9867",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "449ccda9_f2e35c0f",
        "filename": "mongo/gridfs/gridfs_test.go",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-01-10T14:55:18Z",
      "side": 1,
      "message": "Ah I remember why I did it this way - createTestClient() is a private function that can\u0027t be accessed here. Regardless, it would be good to refactor this to use the testutil.Topology() function to make sure we don\u0027t connect multiple topologies and create 1 shared client from that topology.",
      "parentUuid": "28186594_0e15645b",
      "range": {
        "startLine": 22,
        "startChar": 22,
        "endLine": 22,
        "endChar": 31
      },
      "revId": "822bf46c9532f210af0f758d5e604e83de8c9867",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f7f3dd1_61336753",
        "filename": "mongo/gridfs/gridfs_test.go",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1015552
      },
      "writtenOn": "2019-01-10T20:37:25Z",
      "side": 1,
      "message": "I think I made this change..? I didn\u0027t end up using testutil.Topology() though... Let me know what you think. I may be misunderstanding you here.",
      "parentUuid": "449ccda9_f2e35c0f",
      "range": {
        "startLine": 22,
        "startChar": 22,
        "endLine": 22,
        "endChar": 31
      },
      "revId": "822bf46c9532f210af0f758d5e604e83de8c9867",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02df52e2_5a4b309d",
        "filename": "mongo/gridfs/gridfs_test.go",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-01-10T01:14:57Z",
      "side": 1,
      "message": "Add a test that has just options.GridFSBucket() and options.GridFSUpload() to make sure defaults are being set correctly.",
      "range": {
        "startLine": 36,
        "startChar": 4,
        "endLine": 36,
        "endChar": 18
      },
      "revId": "822bf46c9532f210af0f758d5e604e83de8c9867",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d0b7d4b_5f5d9cc9",
        "filename": "mongo/gridfs/gridfs_test.go",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-01-10T18:57:22Z",
      "side": 1,
      "message": "Isn\u0027t that the first test?",
      "parentUuid": "02df52e2_5a4b309d",
      "range": {
        "startLine": 36,
        "startChar": 4,
        "endLine": 36,
        "endChar": 18
      },
      "revId": "822bf46c9532f210af0f758d5e604e83de8c9867",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab6adb29_02b95b97",
        "filename": "mongo/gridfs/gridfs_test.go",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1015552
      },
      "writtenOn": "2019-01-10T20:37:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "02df52e2_5a4b309d",
      "range": {
        "startLine": 36,
        "startChar": 4,
        "endLine": 36,
        "endChar": 18
      },
      "revId": "822bf46c9532f210af0f758d5e604e83de8c9867",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4dfa6939_12da61dc",
        "filename": "mongo/gridfs/gridfs_test.go",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-01-10T18:57:22Z",
      "side": 1,
      "message": "Instead of doing this in the old Go style, let\u0027s make this one test function, TestGridFS, and use t.Run to make subtests.\n\nFor example:\n    t.Run(\"ChunkSize\", func(t *testing.T) { ... }",
      "range": {
        "startLine": 48,
        "startChar": 5,
        "endLine": 48,
        "endChar": 25
      },
      "revId": "822bf46c9532f210af0f758d5e604e83de8c9867",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60efc94a_aa763782",
        "filename": "mongo/gridfs/gridfs_test.go",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1015552
      },
      "writtenOn": "2019-01-10T20:37:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4dfa6939_12da61dc",
      "range": {
        "startLine": 48,
        "startChar": 5,
        "endLine": 48,
        "endChar": 25
      },
      "revId": "822bf46c9532f210af0f758d5e604e83de8c9867",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d749ff7d_e4ec06b3",
        "filename": "mongo/gridfs/gridfs_test.go",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-01-10T01:14:57Z",
      "side": 1,
      "message": "Should be if tt.bucketOpts !\u003d nil \u0026\u0026 tt.bucketOpts.ChunkSizeBytes !\u003d nil",
      "range": {
        "startLine": 58,
        "startChar": 3,
        "endLine": 58,
        "endChar": 28
      },
      "revId": "822bf46c9532f210af0f758d5e604e83de8c9867",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4282e545_0ce6e997",
        "filename": "mongo/gridfs/gridfs_test.go",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 1015552
      },
      "writtenOn": "2019-01-10T20:37:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d749ff7d_e4ec06b3",
      "range": {
        "startLine": 58,
        "startChar": 3,
        "endLine": 58,
        "endChar": 28
      },
      "revId": "822bf46c9532f210af0f758d5e604e83de8c9867",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d4fb13a_9fb0248e",
        "filename": "mongo/gridfs/gridfs_test.go",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-01-10T01:14:57Z",
      "side": 1,
      "message": "Same idea as previous comment (if tt.uploadOpts !\u003d nil \u0026\u0026 tt.uploadOpts.ChunkSizeBytes !\u003d nil)",
      "range": {
        "startLine": 66,
        "startChar": 3,
        "endLine": 66,
        "endChar": 26
      },
      "revId": "822bf46c9532f210af0f758d5e604e83de8c9867",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81006c30_d02192d5",
        "filename": "mongo/gridfs/gridfs_test.go",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1015552
      },
      "writtenOn": "2019-01-10T20:37:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4d4fb13a_9fb0248e",
      "range": {
        "startLine": 66,
        "startChar": 3,
        "endLine": 66,
        "endChar": 26
      },
      "revId": "822bf46c9532f210af0f758d5e604e83de8c9867",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc19c652_458963ce",
        "filename": "mongo/gridfs/gridfs_test.go",
        "patchSetId": 2
      },
      "lineNbr": 81,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-01-10T18:57:22Z",
      "side": 1,
      "message": "Can we define a context with an actual timeout here and use that? Using a global timeout is confusing.",
      "range": {
        "startLine": 81,
        "startChar": 23,
        "endLine": 81,
        "endChar": 26
      },
      "revId": "822bf46c9532f210af0f758d5e604e83de8c9867",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e0cda3a_cd6fbcc6",
        "filename": "mongo/gridfs/gridfs_test.go",
        "patchSetId": 2
      },
      "lineNbr": 81,
      "author": {
        "id": 1015552
      },
      "writtenOn": "2019-01-10T20:37:25Z",
      "side": 1,
      "message": "Done - actually ended finding a Drop() function for bucket so I used that, but I set the bucket write deadline and removed the global ctx in other places.",
      "parentUuid": "dc19c652_458963ce",
      "range": {
        "startLine": 81,
        "startChar": 23,
        "endLine": 81,
        "endChar": 26
      },
      "revId": "822bf46c9532f210af0f758d5e604e83de8c9867",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b9b173f_29868241",
        "filename": "mongo/gridfs/gridfs_test.go",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-01-10T01:14:57Z",
      "side": 1,
      "message": "If you want a bson.Raw you can use DecodeBytes()",
      "range": {
        "startLine": 96,
        "startChar": 2,
        "endLine": 96,
        "endChar": 21
      },
      "revId": "822bf46c9532f210af0f758d5e604e83de8c9867",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4c4992b_f2a2248d",
        "filename": "mongo/gridfs/gridfs_test.go",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-01-10T18:57:22Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "9b9b173f_29868241",
      "range": {
        "startLine": 96,
        "startChar": 2,
        "endLine": 96,
        "endChar": 21
      },
      "revId": "822bf46c9532f210af0f758d5e604e83de8c9867",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65be563a_969ffa92",
        "filename": "mongo/gridfs/gridfs_test.go",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 1015552
      },
      "writtenOn": "2019-01-10T20:37:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9b9b173f_29868241",
      "range": {
        "startLine": 96,
        "startChar": 2,
        "endLine": 96,
        "endChar": 21
      },
      "revId": "822bf46c9532f210af0f758d5e604e83de8c9867",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "42198fda_8ebf97d4",
        "filename": "mongo/gridfs/gridfs_test.go",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-01-10T01:14:57Z",
      "side": 1,
      "message": "If you\u0027re checking that the element exists, this check should be (err \u003d\u003d nil).",
      "range": {
        "startLine": 100,
        "startChar": 50,
        "endLine": 100,
        "endChar": 60
      },
      "revId": "822bf46c9532f210af0f758d5e604e83de8c9867",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07e49832_5c632b6a",
        "filename": "mongo/gridfs/gridfs_test.go",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 1015552
      },
      "writtenOn": "2019-01-10T20:37:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "42198fda_8ebf97d4",
      "range": {
        "startLine": 100,
        "startChar": 50,
        "endLine": 100,
        "endChar": 60
      },
      "revId": "822bf46c9532f210af0f758d5e604e83de8c9867",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f471383e_da1cbbc7",
        "filename": "mongo/gridfs/gridfs_test.go",
        "patchSetId": 2
      },
      "lineNbr": 109,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-01-10T01:14:57Z",
      "side": 1,
      "message": "A lot of this logic is duplicated from the previous indexes check for the files collection. Can probably factor this into a method that takes a *Collection and an index name and checks if that index exists.",
      "range": {
        "startLine": 109,
        "startChar": 1,
        "endLine": 109,
        "endChar": 4
      },
      "revId": "822bf46c9532f210af0f758d5e604e83de8c9867",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6c2c818_8c5378f1",
        "filename": "mongo/gridfs/gridfs_test.go",
        "patchSetId": 2
      },
      "lineNbr": 109,
      "author": {
        "id": 1015552
      },
      "writtenOn": "2019-01-10T20:37:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f471383e_da1cbbc7",
      "range": {
        "startLine": 109,
        "startChar": 1,
        "endLine": 109,
        "endChar": 4
      },
      "revId": "822bf46c9532f210af0f758d5e604e83de8c9867",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4223392a_53ceaec0",
        "filename": "mongo/gridfs/gridfs_test.go",
        "patchSetId": 2
      },
      "lineNbr": 125,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-01-10T01:14:57Z",
      "side": 1,
      "message": "Might be better named \"RoundTrip\" instead of \"Write\" because it does both a write and a read.",
      "range": {
        "startLine": 125,
        "startChar": 16,
        "endLine": 125,
        "endChar": 21
      },
      "revId": "822bf46c9532f210af0f758d5e604e83de8c9867",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad61b763_20cc22c6",
        "filename": "mongo/gridfs/gridfs_test.go",
        "patchSetId": 2
      },
      "lineNbr": 125,
      "author": {
        "id": 1015552
      },
      "writtenOn": "2019-01-10T20:37:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4223392a_53ceaec0",
      "range": {
        "startLine": 125,
        "startChar": 16,
        "endLine": 125,
        "endChar": 21
      },
      "revId": "822bf46c9532f210af0f758d5e604e83de8c9867",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0777c1ca_6c6ead9b",
        "filename": "mongo/gridfs/gridfs_test.go",
        "patchSetId": 2
      },
      "lineNbr": 130,
      "author": {
        "id": 1015552
      },
      "writtenOn": "2019-01-09T22:03:07Z",
      "side": 1,
      "message": "@Divjot this test should test your new changes since the file size is \u003e 16 MB.",
      "revId": "822bf46c9532f210af0f758d5e604e83de8c9867",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "126d7d45_42d5bda2",
        "filename": "mongo/gridfs/gridfs_test.go",
        "patchSetId": 2
      },
      "lineNbr": 130,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-01-10T01:14:57Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "0777c1ca_6c6ead9b",
      "revId": "822bf46c9532f210af0f758d5e604e83de8c9867",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bc92d475_a7322218",
        "filename": "mongo/gridfs/gridfs_test.go",
        "patchSetId": 2
      },
      "lineNbr": 137,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-01-10T18:57:22Z",
      "side": 1,
      "message": "Can we just read random bytes into here using math/rand or crypto/rand? It\u0027ll make it a little more clear that we don\u0027t care about the actual bytes.",
      "range": {
        "startLine": 134,
        "startChar": 0,
        "endLine": 137,
        "endChar": 2
      },
      "revId": "822bf46c9532f210af0f758d5e604e83de8c9867",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a133536a_fbd01a54",
        "filename": "mongo/gridfs/gridfs_test.go",
        "patchSetId": 2
      },
      "lineNbr": 137,
      "author": {
        "id": 1015552
      },
      "writtenOn": "2019-01-10T20:37:25Z",
      "side": 1,
      "message": "Done - thanks for this suggestion - makes much more sense! I wanted the values to be set to something other than 0, but did have concerns that this looked too specific...",
      "parentUuid": "bc92d475_a7322218",
      "range": {
        "startLine": 134,
        "startChar": 0,
        "endLine": 137,
        "endChar": 2
      },
      "revId": "822bf46c9532f210af0f758d5e604e83de8c9867",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b3a9a9e6_f046c001",
        "filename": "mongo/gridfs/gridfs_test.go",
        "patchSetId": 2
      },
      "lineNbr": 145,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-01-10T01:14:57Z",
      "side": 1,
      "message": "Check this error before calling bytes.Equal",
      "range": {
        "startLine": 145,
        "startChar": 4,
        "endLine": 145,
        "endChar": 7
      },
      "revId": "822bf46c9532f210af0f758d5e604e83de8c9867",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "752a02bf_74a5ad90",
        "filename": "mongo/gridfs/gridfs_test.go",
        "patchSetId": 2
      },
      "lineNbr": 145,
      "author": {
        "id": 1015552
      },
      "writtenOn": "2019-01-10T20:37:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b3a9a9e6_f046c001",
      "range": {
        "startLine": 145,
        "startChar": 4,
        "endLine": 145,
        "endChar": 7
      },
      "revId": "822bf46c9532f210af0f758d5e604e83de8c9867",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}