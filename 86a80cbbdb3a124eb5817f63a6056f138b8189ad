{
  "comments": [
    {
      "key": {
        "uuid": "e090c05d_7a1d739e",
        "filename": "x/mongo/driverlegacy/dns/dns.go",
        "patchSetId": 6
      },
      "lineNbr": 25,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-04-22T15:44:33Z",
      "side": 1,
      "message": "The resolver is stateless, so DefaultResolver can be a variable rather similar to DefaultDialer rather than a function.",
      "range": {
        "startLine": 25,
        "startChar": 5,
        "endLine": 25,
        "endChar": 20
      },
      "revId": "86a80cbbdb3a124eb5817f63a6056f138b8189ad",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "910d29a0_f5b8ca7f",
        "filename": "x/mongo/driverlegacy/dns/dns.go",
        "patchSetId": 6
      },
      "lineNbr": 37,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-04-22T15:44:33Z",
      "side": 1,
      "message": "This can just be return r.fetchSeedlistFromSRV(parsedHosts[0])",
      "range": {
        "startLine": 37,
        "startChar": 1,
        "endLine": 37,
        "endChar": 16
      },
      "revId": "86a80cbbdb3a124eb5817f63a6056f138b8189ad",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4fc579f_69d70690",
        "filename": "x/mongo/driverlegacy/dns/dns.go",
        "patchSetId": 6
      },
      "lineNbr": 117,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-04-22T15:44:33Z",
      "side": 1,
      "message": "According to the SRV polling spec, when we find a record that does not have the correct domain name, we should just skip adding that host to the topology and not raise an error.\n\nThe initial seedlist discovery spec, however, says \"A driver MUST verify that the host names returned through SRV records have the same parent {domainname}. Drivers MUST raise an error and MUST NOT initiate a connection to any returned host name which does not share the same {domainname}.\"",
      "range": {
        "startLine": 117,
        "startChar": 3,
        "endLine": 117,
        "endChar": 9
      },
      "revId": "86a80cbbdb3a124eb5817f63a6056f138b8189ad",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "201d2bca_1607c405",
        "filename": "x/mongo/driverlegacy/topology/topology.go",
        "patchSetId": 6
      },
      "lineNbr": 74,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-04-22T15:35:51Z",
      "side": 1,
      "message": "can we add a comment about what this stores?\n\n    pollHeartbeatTime atomic.Value // holds a bool",
      "range": {
        "startLine": 74,
        "startChar": 19,
        "endLine": 74,
        "endChar": 31
      },
      "revId": "86a80cbbdb3a124eb5817f63a6056f138b8189ad",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7145a598_85e01ce2",
        "filename": "x/mongo/driverlegacy/topology/topology.go",
        "patchSetId": 6
      },
      "lineNbr": 74,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-04-22T15:44:33Z",
      "side": 1,
      "message": "I don\u0027t like the fact that this needs to be an atomic.Value so the tests can access it safely. If we\u0027re concerned about tests taking a long time when the heartbeat frequency is used, maybe we can add a flag that skips those tests by default and make sure we specify that flag for Evergreen patch builds?",
      "range": {
        "startLine": 74,
        "startChar": 1,
        "endLine": 74,
        "endChar": 18
      },
      "revId": "86a80cbbdb3a124eb5817f63a6056f138b8189ad",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52b001d4_1c50ec34",
        "filename": "x/mongo/driverlegacy/topology/topology.go",
        "patchSetId": 6
      },
      "lineNbr": 145,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-04-22T15:44:33Z",
      "side": 1,
      "message": "can this be abstracted into a function like srvPollingRequired because the same logic is used here and in Disconnect?",
      "range": {
        "startLine": 145,
        "startChar": 1,
        "endLine": 145,
        "endChar": 60
      },
      "revId": "86a80cbbdb3a124eb5817f63a6056f138b8189ad",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42eb63ed_051acd38",
        "filename": "x/mongo/driverlegacy/topology/topology.go",
        "patchSetId": 6
      },
      "lineNbr": 364,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-04-22T15:44:33Z",
      "side": 1,
      "message": "Can you explain why this is necessary?",
      "range": {
        "startLine": 364,
        "startChar": 5,
        "endLine": 364,
        "endChar": 13
      },
      "revId": "86a80cbbdb3a124eb5817f63a6056f138b8189ad",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7f1e585_90868eeb",
        "filename": "x/mongo/driverlegacy/topology/topology.go",
        "patchSetId": 6
      },
      "lineNbr": 412,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-04-22T15:44:33Z",
      "side": 1,
      "message": "Can the logic from here to the end of the loop be abstracted into a function like t.processSRVResults? This function does a lot currently. The unlock logic would also be simpler because you can do defer t.serversLock.Unlock() instead of manually unlocking in every case.",
      "range": {
        "startLine": 412,
        "startChar": 2,
        "endLine": 412,
        "endChar": 22
      },
      "revId": "86a80cbbdb3a124eb5817f63a6056f138b8189ad",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6cd3b20f_bff0385b",
        "filename": "x/mongo/driverlegacy/topology/topology.go",
        "patchSetId": 6
      },
      "lineNbr": 426,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-04-22T15:44:33Z",
      "side": 1,
      "message": "Can this instead be:\n\ns, ok :\u003d t.servers[addr]\nif !ok {\n    continue\n}\n\n// remove server logic\n\nso that the success logic is indented as little as possible?",
      "range": {
        "startLine": 426,
        "startChar": 3,
        "endLine": 426,
        "endChar": 36
      },
      "revId": "86a80cbbdb3a124eb5817f63a6056f138b8189ad",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3797c095_a75779f9",
        "filename": "x/network/description/topology.go",
        "patchSetId": 6
      },
      "lineNbr": 84,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-04-22T15:44:33Z",
      "side": 1,
      "message": "Can this be changed to return a struct with `added` and `removed` members?",
      "range": {
        "startLine": 84,
        "startChar": 18,
        "endLine": 84,
        "endChar": 30
      },
      "revId": "86a80cbbdb3a124eb5817f63a6056f138b8189ad",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e1e0023_0bde2a40",
        "filename": "x/network/description/topology.go",
        "patchSetId": 6
      },
      "lineNbr": 94,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-04-22T15:44:33Z",
      "side": 1,
      "message": "Haven\u0027t thought this out completely, but could this be simplified to something like the following:\n\nfor i \u003c len(oldServers) \u0026\u0026 j \u003c len(hostlist) {\n    // comparison logic for oldServers[i] and hostlist[j]\n}\n\nif i \u003c len(oldServers) {\n    removed \u003d append(removed, oldServers[i:]...)\n}\n\nif j \u003c len(hostlist) {\n    added \u003d append(added, hostlist[j:]...)\n}",
      "range": {
        "startLine": 94,
        "startChar": 1,
        "endLine": 94,
        "endChar": 6
      },
      "revId": "86a80cbbdb3a124eb5817f63a6056f138b8189ad",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}