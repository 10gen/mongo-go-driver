{
  "comments": [
    {
      "key": {
        "uuid": "d4d7b6bb_9699f065",
        "filename": "core/result/result.go",
        "patchSetId": 9
      },
      "lineNbr": 65,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-04-26T13:14:15Z",
      "side": 1,
      "message": "You need details in here according to the CRUD spec. The result may contain extra pertinent information that isn\u0027t exposed in a typed manner.",
      "revId": "890bcff861625342b72cabc12a938f602e80905d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5594d358_a6c3c7fd",
        "filename": "core/result/result.go",
        "patchSetId": 9
      },
      "lineNbr": 65,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2018-04-26T15:42:34Z",
      "side": 1,
      "message": "While I\u0027ve added this, we need to update the CRUD spec because this field doesn\u0027t exist in most circumstances and fields that do exist in 3.4 and 3.6 like codeName are not represented here.",
      "parentUuid": "d4d7b6bb_9699f065",
      "revId": "890bcff861625342b72cabc12a938f602e80905d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "afc67a1b_8218598b",
        "filename": "core/result/result.go",
        "patchSetId": 9
      },
      "lineNbr": 65,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-04-26T17:22:52Z",
      "side": 1,
      "message": "Then let\u0027s file a ticket for the CRUD spec to include this extra stuff. As it is, this extra stuff does indeed exist in the \"details\" document, which is why it\u0027s there. Using an older driver against a newer server means you still get the extra information.",
      "parentUuid": "5594d358_a6c3c7fd",
      "revId": "890bcff861625342b72cabc12a938f602e80905d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e66a98e_cda85b71",
        "filename": "mongo/collection.go",
        "patchSetId": 9
      },
      "lineNbr": 152,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-04-26T13:14:15Z",
      "side": 1,
      "message": "1) So, not to belabor this, but this still seems wrong. In affect, we are forcing every user who calls a write method to not only check for a non-nil error, but to also check if it was unacknowledged.\n\nif err !\u003d nil \u0026\u0026 err !\u003d ErrUnacknowledgedWrite {\n    // ...\n}\n\nIf they don\u0027t do this and they do an unacknowledged write, they will misinterpret and handle the error, presumably because they think there was a problem, which there was not. Do other go APIs require this type of error checking?\n\nThis is going to be a complete surprise to users when someone flips a switch somewhere to make things \"go faster\" and everything starts breaking.\n\n(We are saved by the fact that this is used very infrequently, but for those few users...)\n\n2) Beyond this, the CRUD spec already has a mechanism to provide this information inside the XXXResult structures.  Like all things, I\u0027m not against breaking the rules with sufficient reason, but it has to be justified.",
      "revId": "890bcff861625342b72cabc12a938f602e80905d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a769568_09104ddf",
        "filename": "mongo/collection.go",
        "patchSetId": 9
      },
      "lineNbr": 152,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2018-04-26T15:42:34Z",
      "side": 1,
      "message": "ErrUnacknowledgedWrite works like io.EOF. It\u0027s a signal of a graceful end to something, it doesn\u0027t necessarily invalidate the returned information.\n\nI understand that the spec says that acknowledged can be a field within the result object, but that is far easier to miss than an error. Errors are not exceptions, so returning an error doesn\u0027t necessarily mean that something has failed.",
      "parentUuid": "0e66a98e_cda85b71",
      "revId": "890bcff861625342b72cabc12a938f602e80905d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37cb04b2_df1266a5",
        "filename": "mongo/collection.go",
        "patchSetId": 9
      },
      "lineNbr": 152,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-04-26T17:22:52Z",
      "side": 1,
      "message": "Fair enough... while I disagree with this choice, I\u0027m not going to argue about go idioms. You know way better than I.\n\nHowever, I can provide a little insight into the CRUD spec part.\n\nThe acknowledged flag in the result is there to indicate that other fields in the result have no values, specifically the counts (matchedCount, modifiedCount, etc...). If the fact that these have no values is divorced from the result itself, a user cannot pass the result to a helper function without also passing a second argument to indicate whether the counts in the result type are populated. Is there a go idiom to address this? Do you want to add MatchedCountSet booleans to each result? Is this not something that go developers need to worry about?",
      "parentUuid": "7a769568_09104ddf",
      "revId": "890bcff861625342b72cabc12a938f602e80905d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa24be38_3e69f255",
        "filename": "mongo/collection.go",
        "patchSetId": 9
      },
      "lineNbr": 360,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-04-26T13:14:15Z",
      "side": 1,
      "message": "Yes... an UpdateMany will only ever result in a single upsert. \"Update as many documents as match this filter. If none match, insert one.\"",
      "revId": "890bcff861625342b72cabc12a938f602e80905d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b01ff056_05f1f1fb",
        "filename": "mongo/errors.go",
        "patchSetId": 9
      },
      "lineNbr": 59,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-04-26T13:14:15Z",
      "side": 1,
      "message": "You need details in here according to the CRUD spec. The result may contain extra pertinent information that isn\u0027t exposed in a typed manner.",
      "revId": "890bcff861625342b72cabc12a938f602e80905d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "918e750e_8f342910",
        "filename": "mongo/errors.go",
        "patchSetId": 9
      },
      "lineNbr": 102,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-04-26T13:14:15Z",
      "side": 1,
      "message": "This comment isn\u0027t accurate.",
      "revId": "890bcff861625342b72cabc12a938f602e80905d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ccc140a3_c25b1191",
        "filename": "mongo/errors.go",
        "patchSetId": 9
      },
      "lineNbr": 102,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2018-04-26T15:42:34Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "918e750e_8f342910",
      "revId": "890bcff861625342b72cabc12a938f602e80905d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e9980292_12629177",
        "filename": "mongo/errors.go",
        "patchSetId": 9
      },
      "lineNbr": 107,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-04-26T13:14:15Z",
      "side": 1,
      "message": "This comment isn\u0027t accurate.",
      "revId": "890bcff861625342b72cabc12a938f602e80905d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "68272081_7a4b1836",
        "filename": "mongo/errors.go",
        "patchSetId": 9
      },
      "lineNbr": 107,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2018-04-26T15:42:34Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e9980292_12629177",
      "revId": "890bcff861625342b72cabc12a938f602e80905d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}