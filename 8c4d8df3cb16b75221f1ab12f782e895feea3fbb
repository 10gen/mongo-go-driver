{
  "comments": [
    {
      "key": {
        "uuid": "c21525c7_a8f2dab6",
        "filename": "mongo/change_stream.go",
        "patchSetId": 3
      },
      "lineNbr": 372,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-01-10T19:35:18Z",
      "side": 1,
      "message": "This function feels awkward, but we\u0027re going to have to change it in the near future once we implement the changes to the spec in SPEC-1122, so we can leave this for now.",
      "range": {
        "startLine": 372,
        "startChar": 24,
        "endLine": 372,
        "endChar": 40
      },
      "revId": "8c4d8df3cb16b75221f1ab12f782e895feea3fbb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4613ff29_4fc4fcb3",
        "filename": "mongo/change_stream.go",
        "patchSetId": 3
      },
      "lineNbr": 409,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-01-10T19:35:18Z",
      "side": 1,
      "message": "Why is this in a for loop now?",
      "range": {
        "startLine": 409,
        "startChar": 1,
        "endLine": 409,
        "endChar": 6
      },
      "revId": "8c4d8df3cb16b75221f1ab12f782e895feea3fbb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1395586b_aa062ce8",
        "filename": "mongo/change_stream.go",
        "patchSetId": 3
      },
      "lineNbr": 409,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-01-10T19:38:20Z",
      "side": 1,
      "message": "Missed the part about only resuming once. The original patch recursively called cs.Next() function so the for loop was a way to avoid deep recursion, but if we only want to resume once I think the right fix is to have \"return cs.cursor.Next(ctx)\" at the end of this. Will update in the next patch.",
      "parentUuid": "4613ff29_4fc4fcb3",
      "range": {
        "startLine": 409,
        "startChar": 1,
        "endLine": 409,
        "endChar": 6
      },
      "revId": "8c4d8df3cb16b75221f1ab12f782e895feea3fbb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e576eb29_84bfcd92",
        "filename": "mongo/change_stream.go",
        "patchSetId": 3
      },
      "lineNbr": 409,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-01-10T19:43:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1395586b_aa062ce8",
      "range": {
        "startLine": 409,
        "startChar": 1,
        "endLine": 409,
        "endChar": 6
      },
      "revId": "8c4d8df3cb16b75221f1ab12f782e895feea3fbb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f5b3859_2ead571a",
        "filename": "mongo/change_stream.go",
        "patchSetId": 3
      },
      "lineNbr": 409,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-01-11T15:57:33Z",
      "side": 1,
      "message": "Divjot, please summarize our discussion from yesterday about why a for loop here is necessary, so it\u0027s clear to all reviewers.",
      "parentUuid": "e576eb29_84bfcd92",
      "range": {
        "startLine": 409,
        "startChar": 1,
        "endLine": 409,
        "endChar": 6
      },
      "revId": "8c4d8df3cb16b75221f1ab12f782e895feea3fbb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ddaf4bde_2106099c",
        "filename": "mongo/change_stream.go",
        "patchSetId": 3
      },
      "lineNbr": 409,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-01-11T17:32:06Z",
      "side": 1,
      "message": "I\u0027m still confused, how is this allowed per the spec if the spec says we\u0027re only allowed to retry a resumable error once?",
      "parentUuid": "4f5b3859_2ead571a",
      "range": {
        "startLine": 409,
        "startChar": 1,
        "endLine": 409,
        "endChar": 6
      },
      "revId": "8c4d8df3cb16b75221f1ab12f782e895feea3fbb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8dbed302_d4cfa3ad",
        "filename": "mongo/change_stream.go",
        "patchSetId": 3
      },
      "lineNbr": 409,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2019-01-11T17:40:36Z",
      "side": 1,
      "message": "The idea is that a getMore can fail with a single stepdown of the primary, which would cause the SDAM state to be reset and the subsequent aggregate command to execute with no errors. If the aggregate has no results in the first batch, we\u0027d immediately do a getMore, which could fail due to a network error again. Putting the code in a loop allows us to resume multiple times in the event of multiple primary stepdowns (like the situation described in JAVA-2858).\n\nOne question I had about the spec - it does say we only resume once because multiple consecutive network errors on getMore indicate an outage. However, if there was an outage, wouldn\u0027t the aggregate fail as well? Going through the loop multiple times and having the aggregate succeed but the getMore fail doesn\u0027t seem to suggest an outage to me, but I might be missing something.\n\nAs for spec compliance, this bug was reported in both Java and .NET and the hope is that SPEC-1073 will be resolved by adding this fix.",
      "parentUuid": "ddaf4bde_2106099c",
      "range": {
        "startLine": 409,
        "startChar": 1,
        "endLine": 409,
        "endChar": 6
      },
      "revId": "8c4d8df3cb16b75221f1ab12f782e895feea3fbb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5bc7a66b_cee842ad",
        "filename": "mongo/change_stream.go",
        "patchSetId": 3
      },
      "lineNbr": 409,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-01-11T19:14:52Z",
      "side": 1,
      "message": "Ah, alright I see the point about the aggregate failing along with the getMore.",
      "parentUuid": "8dbed302_d4cfa3ad",
      "range": {
        "startLine": 409,
        "startChar": 1,
        "endLine": 409,
        "endChar": 6
      },
      "revId": "8c4d8df3cb16b75221f1ab12f782e895feea3fbb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}