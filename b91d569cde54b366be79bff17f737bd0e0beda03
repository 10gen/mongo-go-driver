{
  "comments": [
    {
      "key": {
        "uuid": "8b16b6a6_47ef37a2",
        "filename": "mongo/cursor.go",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-04T14:30:33Z",
      "side": 1,
      "message": "no longer used",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 49,
        "endChar": 1
      },
      "revId": "b91d569cde54b366be79bff17f737bd0e0beda03",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "079de84b_1de9778e",
        "filename": "mongo/cursor.go",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-04T16:07:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8b16b6a6_47ef37a2",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 49,
        "endChar": 1
      },
      "revId": "b91d569cde54b366be79bff17f737bd0e0beda03",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da20c2da_68691dc8",
        "filename": "mongo/cursor.go",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-04T14:30:33Z",
      "side": 1,
      "message": "I think this should return false if c.err !\u003d null, becure calling c.bc.Next again.",
      "range": {
        "startLine": 110,
        "startChar": 1,
        "endLine": 110,
        "endChar": 2
      },
      "revId": "b91d569cde54b366be79bff17f737bd0e0beda03",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6cbeeafe_6f302491",
        "filename": "mongo/cursor.go",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-04T16:07:07Z",
      "side": 1,
      "message": "The error here is io.EOF which means we got an empty batch. Unless you want to return an error if the server sends us back garbage. I don\u0027t disagree with that, I just want to make sure that\u0027s what you meant by returning false here.",
      "parentUuid": "da20c2da_68691dc8",
      "range": {
        "startLine": 110,
        "startChar": 1,
        "endLine": 110,
        "endChar": 2
      },
      "revId": "b91d569cde54b366be79bff17f737bd0e0beda03",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0bd3ce6_6dd96c8d",
        "filename": "mongo/cursor.go",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-04T19:31:15Z",
      "side": 1,
      "message": "Is io.EOF the only error that c.batch.Next() can return?  In the switch statement on lines 81-88 we check for io.EOF as well, but return false if it\u0027s any other non-nil error.",
      "parentUuid": "6cbeeafe_6f302491",
      "range": {
        "startLine": 110,
        "startChar": 1,
        "endLine": 110,
        "endChar": 2
      },
      "revId": "b91d569cde54b366be79bff17f737bd0e0beda03",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a258ec69_13f9da12",
        "filename": "mongo/cursor.go",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-04T20:44:26Z",
      "side": 1,
      "message": "Ah you\u0027re right. I\u0027ll update this one to match.",
      "parentUuid": "b0bd3ce6_6dd96c8d",
      "range": {
        "startLine": 110,
        "startChar": 1,
        "endLine": 110,
        "endChar": 2
      },
      "revId": "b91d569cde54b366be79bff17f737bd0e0beda03",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75a48f70_6b1edbfd",
        "filename": "mongo/cursor.go",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-07T21:19:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a258ec69_13f9da12",
      "range": {
        "startLine": 110,
        "startChar": 1,
        "endLine": 110,
        "endChar": 2
      },
      "revId": "b91d569cde54b366be79bff17f737bd0e0beda03",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bffda4a1_e25c14f4",
        "filename": "x/bsonx/bsoncore/document_sequence.go",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-04T14:30:33Z",
      "side": 1,
      "message": "Why expose the innards of this struct when its methods provide a nice abstraction?  Especially as when we eventually drop 3.0 support we can get rid of the Style altogether.",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 1
      },
      "revId": "b91d569cde54b366be79bff17f737bd0e0beda03",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52b97aad_1a754066",
        "filename": "x/bsonx/bsoncore/document_sequence.go",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-04T16:07:07Z",
      "side": 1,
      "message": "This is exposed because it makes the type much easier to work with. Otherwise we\u0027d have to add helpers for resetting the state which would essentially be these fields as methods, which makes things more complicated. Also, since OP_MSG supports SequenceStyle we wouldn\u0027t get rid of it (and just because the server doesn\u0027t support it doesn\u0027t mean that server implementations won\u0027t support it, e.g. atlastproxy, house, etc...).",
      "parentUuid": "bffda4a1_e25c14f4",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 1
      },
      "revId": "b91d569cde54b366be79bff17f737bd0e0beda03",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2cf12e9e_2105e705",
        "filename": "x/bsonx/bsoncore/document_sequence.go",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2019-02-04T20:26:25Z",
      "side": 1,
      "message": "Aren\u0027t there already helpers for resetting the state (ResetIterator)? I\u0027m not sure who would actually use Style here unless they were intending on consuming Data directly, at which point they are doing what we are doing for them. I think you\u0027d be pretty safe not exposing any of these.",
      "parentUuid": "52b97aad_1a754066",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 1
      },
      "revId": "b91d569cde54b366be79bff17f737bd0e0beda03",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2378a11_6e1043c1",
        "filename": "x/bsonx/bsoncore/document_sequence.go",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-04T20:44:26Z",
      "side": 1,
      "message": "So we can drop the ResetIterator method, if we want. When I first wrote this I did have pos as a private field, but I realized there were cases where we need access to it (https://review.gerrithub.io/c/mongodb/mongo-go-driver/+/443085/1/x/mongo/driver/batch_cursor.go#125). I do think we could likely put lots of gates around this type and implement methods to do each specific thing we need, but that seems to violate the spirit of bsoncore which is a minimal BSON package.",
      "parentUuid": "2cf12e9e_2105e705",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 1
      },
      "revId": "b91d569cde54b366be79bff17f737bd0e0beda03",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3178c64_5bcef804",
        "filename": "x/bsonx/bsoncore/document_sequence.go",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-04T14:30:33Z",
      "side": 1,
      "message": "Delete unused method",
      "revId": "b91d569cde54b366be79bff17f737bd0e0beda03",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3057442_25655177",
        "filename": "x/bsonx/bsoncore/document_sequence.go",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-04T16:07:07Z",
      "side": 1,
      "message": "This method was explicitly asked for by Craig, also this seems like the most obvious way someone directly consuming a batch cursor from the driver package would likely use this type.",
      "parentUuid": "f3178c64_5bcef804",
      "revId": "b91d569cde54b366be79bff17f737bd0e0beda03",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ceb8bd6_07694e9f",
        "filename": "x/bsonx/bsoncore/document_sequence.go",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-04T19:31:15Z",
      "side": 1,
      "message": "I thought the way we wanted people to use the type was with the Next() method.  @Craig, thoughts?",
      "parentUuid": "c3057442_25655177",
      "revId": "b91d569cde54b366be79bff17f737bd0e0beda03",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee83bdc3_e1662ac2",
        "filename": "x/bsonx/bsoncore/document_sequence.go",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2019-02-04T20:26:25Z",
      "side": 1,
      "message": "I did indicate this would be nice. I think that \u0027twas on the actual cursor. If we have this and a way to iterate through here using Next(), that should be sufficient. We can always add this later if necessary.",
      "parentUuid": "5ceb8bd6_07694e9f",
      "revId": "b91d569cde54b366be79bff17f737bd0e0beda03",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c894ba4a_09714137",
        "filename": "x/bsonx/bsoncore/document_sequence.go",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-04T20:44:26Z",
      "side": 1,
      "message": "How about we make this private for now? What I want to avoid is people implementing this using Next because they\u0027ll be doing excessive error checking which isn\u0027t idiomatic.",
      "parentUuid": "ee83bdc3_e1662ac2",
      "revId": "b91d569cde54b366be79bff17f737bd0e0beda03",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7555d893_023adf2d",
        "filename": "x/bsonx/bsoncore/document_sequence.go",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-08T15:36:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c894ba4a_09714137",
      "revId": "b91d569cde54b366be79bff17f737bd0e0beda03",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}