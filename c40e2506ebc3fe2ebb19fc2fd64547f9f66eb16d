{
  "comments": [
    {
      "key": {
        "uuid": "76c41abd_865ab0ae",
        "filename": "bson/bsoncodec/bsoncodec.go",
        "patchSetId": 16
      },
      "lineNbr": 17,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-09-21T15:29:49Z",
      "side": 1,
      "message": "Why is this in the bsoncodec package? I seems like it belongs in the bson package given what it does.",
      "revId": "c40e2506ebc3fe2ebb19fc2fd64547f9f66eb16d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86825fbc_434050cd",
        "filename": "bson/bsoncodec/bsoncodec.go",
        "patchSetId": 16
      },
      "lineNbr": 17,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2018-09-21T16:41:51Z",
      "side": 1,
      "message": "It can\u0027t be in the bson package because it requires the use of a Registry to function.",
      "parentUuid": "76c41abd_865ab0ae",
      "revId": "c40e2506ebc3fe2ebb19fc2fd64547f9f66eb16d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "906ffe42_84977b5c",
        "filename": "bson/constructor.go",
        "patchSetId": 16
      },
      "lineNbr": 536,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-09-21T15:29:49Z",
      "side": 1,
      "message": "Isn\u0027t there a go idiom for these types of methods... bson.MustElement(bson.EC.FromBytes(src)) as opposed to having 2 different methods for absolutely everything.\n\nbson.MustElement, bson.MustValue, etc... that can handle multiple methods... LookupElement, Lookup?",
      "revId": "c40e2506ebc3fe2ebb19fc2fd64547f9f66eb16d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d74b3e6f_85671d95",
        "filename": "bson/constructor.go",
        "patchSetId": 16
      },
      "lineNbr": 536,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2018-09-21T16:41:51Z",
      "side": 1,
      "message": "Some packages follow that pattern, but the way in which this package is used for the most part doesn\u0027t require error handling from methods like these. Also, it was requested instead of using Must* we make the default what would usually be Must* methods and add *Err methods for ones that return an error. It\u0027s something that I\u0027ve been trying to keep consistent across the library.",
      "parentUuid": "906ffe42_84977b5c",
      "revId": "c40e2506ebc3fe2ebb19fc2fd64547f9f66eb16d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}