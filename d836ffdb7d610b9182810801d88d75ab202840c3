{
  "comments": [
    {
      "key": {
        "uuid": "2c716491_9821eb0a",
        "filename": "mongo/options/clientoptions_test.go",
        "patchSetId": 2
      },
      "lineNbr": 64,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-08-02T16:28:08Z",
      "side": 1,
      "message": "We should add a test for MinPoolSize as well.",
      "range": {
        "startLine": 64,
        "startChar": 3,
        "endLine": 64,
        "endChar": 86
      },
      "revId": "d836ffdb7d610b9182810801d88d75ab202840c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc495d4d_5ebf2539",
        "filename": "x/mongo/driver/operation/insert.go",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-08-02T16:28:08Z",
      "side": 1,
      "message": "I\u0027m guessing this was a Goland mixup.",
      "range": {
        "startLine": 24,
        "startChar": 3,
        "endLine": 24,
        "endChar": 8
      },
      "revId": "d836ffdb7d610b9182810801d88d75ab202840c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0cdf2292_e8fc06a1",
        "filename": "x/mongo/driver/topology/CMAP_spec_test.go",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-08-02T16:28:08Z",
      "side": 1,
      "message": "Can we use time.Millisecond here instead?",
      "range": {
        "startLine": 100,
        "startChar": 62,
        "endLine": 100,
        "endChar": 69
      },
      "revId": "d836ffdb7d610b9182810801d88d75ab202840c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ea7e5de_1848ce7a",
        "filename": "x/mongo/driver/topology/CMAP_spec_test.go",
        "patchSetId": 2
      },
      "lineNbr": 113,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-08-02T16:28:08Z",
      "side": 1,
      "message": "Why are we sleeping here?",
      "range": {
        "startLine": 113,
        "startChar": 2,
        "endLine": 113,
        "endChar": 30
      },
      "revId": "d836ffdb7d610b9182810801d88d75ab202840c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "527eea5c_a3eee39e",
        "filename": "x/mongo/driver/topology/CMAP_spec_test.go",
        "patchSetId": 2
      },
      "lineNbr": 325,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-08-02T16:28:08Z",
      "side": 1,
      "message": "Use time.Millisecond here as well, also we can convert the float64 to time.Duration directly.",
      "range": {
        "startLine": 325,
        "startChar": 48,
        "endLine": 325,
        "endChar": 55
      },
      "revId": "d836ffdb7d610b9182810801d88d75ab202840c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2738b2af_e8e2aa6c",
        "filename": "x/mongo/driver/topology/CMAP_spec_test.go",
        "patchSetId": 2
      },
      "lineNbr": 379,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-08-02T16:28:08Z",
      "side": 1,
      "message": "1000000 -\u003e time.Millisecond.",
      "range": {
        "startLine": 379,
        "startChar": 101,
        "endLine": 379,
        "endChar": 108
      },
      "revId": "d836ffdb7d610b9182810801d88d75ab202840c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e1e31db_2788179c",
        "filename": "x/mongo/driver/topology/connection.go",
        "patchSetId": 2
      },
      "lineNbr": 31,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-08-02T16:28:08Z",
      "side": 1,
      "message": "This is unfortunate :(\n\nAlso, this should be declared as\n\n    var globalConnectionID uint64 \u003d 1",
      "range": {
        "startLine": 31,
        "startChar": 25,
        "endLine": 31,
        "endChar": 34
      },
      "revId": "d836ffdb7d610b9182810801d88d75ab202840c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37ed763e_ef670744",
        "filename": "x/mongo/driver/topology/pool.go",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-08-02T16:28:08Z",
      "side": 1,
      "message": "Why do we need JSON tags here and why don\u0027t we need BSON tags?",
      "range": {
        "startLine": 49,
        "startChar": 28,
        "endLine": 49,
        "endChar": 32
      },
      "revId": "d836ffdb7d610b9182810801d88d75ab202840c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a528e3e2_c34ce0fb",
        "filename": "x/mongo/driver/topology/pool.go",
        "patchSetId": 2
      },
      "lineNbr": 64,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-08-02T16:28:08Z",
      "side": 1,
      "message": "There shouldn\u0027t an \u003d here, this isn\u0027t a type alias it\u0027s a function type declaration.",
      "range": {
        "startLine": 64,
        "startChar": 17,
        "endLine": 64,
        "endChar": 18
      },
      "revId": "d836ffdb7d610b9182810801d88d75ab202840c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef27bb77_b9fe5a18",
        "filename": "x/mongo/driver/topology/pool.go",
        "patchSetId": 2
      },
      "lineNbr": 95,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-08-02T16:28:08Z",
      "side": 1,
      "message": "style: these should be declared on separate lines.",
      "range": {
        "startLine": 95,
        "startChar": 1,
        "endLine": 95,
        "endChar": 37
      },
      "revId": "d836ffdb7d610b9182810801d88d75ab202840c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b40c0b4_20ac1123",
        "filename": "x/mongo/driver/topology/pool.go",
        "patchSetId": 2
      },
      "lineNbr": 118,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-08-02T16:28:08Z",
      "side": 1,
      "message": "Even though this isn\u0027t it\u0027s own type, we should at least make these constants to help users avoid typos.",
      "range": {
        "startLine": 118,
        "startChar": 11,
        "endLine": 118,
        "endChar": 23
      },
      "revId": "d836ffdb7d610b9182810801d88d75ab202840c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c89db3c_0d60e915",
        "filename": "x/mongo/driver/topology/pool.go",
        "patchSetId": 2
      },
      "lineNbr": 159,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-08-02T16:28:08Z",
      "side": 1,
      "message": "Is this leftover from debugging?",
      "range": {
        "startLine": 156,
        "startChar": 0,
        "endLine": 159,
        "endChar": 2
      },
      "revId": "d836ffdb7d610b9182810801d88d75ab202840c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70e1840c_b22c8570",
        "filename": "x/mongo/driver/topology/pool.go",
        "patchSetId": 2
      },
      "lineNbr": 165,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-08-02T16:28:08Z",
      "side": 1,
      "message": "The context already has the deadline attached to it, we don\u0027t need to make another channel that does the same thing.",
      "range": {
        "startLine": 161,
        "startChar": 0,
        "endLine": 165,
        "endChar": 2
      },
      "revId": "d836ffdb7d610b9182810801d88d75ab202840c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "faa02883_709ef09f",
        "filename": "x/mongo/driver/topology/pool.go",
        "patchSetId": 2
      },
      "lineNbr": 167,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-08-02T16:28:08Z",
      "side": 1,
      "message": "style: this is being used for signaling, use struct{} instead of interface{}.",
      "range": {
        "startLine": 167,
        "startChar": 24,
        "endLine": 167,
        "endChar": 35
      },
      "revId": "d836ffdb7d610b9182810801d88d75ab202840c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62670bd9_5c0804ce",
        "filename": "x/mongo/driver/topology/pool.go",
        "patchSetId": 2
      },
      "lineNbr": 175,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-08-02T16:28:08Z",
      "side": 1,
      "message": "These are doing the same thing, we should be checking for just ctx.Done().",
      "range": {
        "startLine": 174,
        "startChar": 0,
        "endLine": 175,
        "endChar": 19
      },
      "revId": "d836ffdb7d610b9182810801d88d75ab202840c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3206151_6b6dc4da",
        "filename": "x/mongo/driver/topology/pool.go",
        "patchSetId": 2
      },
      "lineNbr": 182,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-08-02T16:28:08Z",
      "side": 1,
      "message": "This function has a lot of space for errors which can be returned but this function isn\u0027t taking an error, also it\u0027s not taking a context.Context, which it should be. I\u0027m assuming this is part of the resource pool, but this might indicate that that design doesn\u0027t work for our needs.",
      "range": {
        "startLine": 182,
        "startChar": 1,
        "endLine": 182,
        "endChar": 26
      },
      "revId": "d836ffdb7d610b9182810801d88d75ab202840c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3d76af2_45741383",
        "filename": "x/mongo/driver/topology/pool.go",
        "patchSetId": 2
      },
      "lineNbr": 223,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-08-02T16:28:08Z",
      "side": 1,
      "message": "style: this method should be declared directly under poolConfig or it should be before or after the other pool methods. It\u0027s confusing having this inline with the other pool methods.",
      "range": {
        "startLine": 214,
        "startChar": 0,
        "endLine": 223,
        "endChar": 1
      },
      "revId": "d836ffdb7d610b9182810801d88d75ab202840c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d463d34b_e67e5e56",
        "filename": "x/mongo/driver/topology/pool.go",
        "patchSetId": 2
      },
      "lineNbr": 269,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-08-02T16:28:08Z",
      "side": 1,
      "message": "style: 1000000 -\u003e time.Millisecond.",
      "range": {
        "startLine": 269,
        "startChar": 53,
        "endLine": 269,
        "endChar": 60
      },
      "revId": "d836ffdb7d610b9182810801d88d75ab202840c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5bf2b018_fb08caa7",
        "filename": "x/mongo/driver/topology/pool.go",
        "patchSetId": 2
      },
      "lineNbr": 514,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-08-02T16:28:08Z",
      "side": 1,
      "message": "style: CheckIn and CheckOut don\u0027t match standard library Go idioms for pools, which use Put and Get.",
      "range": {
        "startLine": 514,
        "startChar": 15,
        "endLine": 514,
        "endChar": 23
      },
      "revId": "d836ffdb7d610b9182810801d88d75ab202840c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}