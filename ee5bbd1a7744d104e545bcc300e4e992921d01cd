{
  "comments": [
    {
      "key": {
        "uuid": "acabe8a1_42fb56fc",
        "filename": "mongo/client.go",
        "patchSetId": 7
      },
      "lineNbr": 68,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-13T15:44:55Z",
      "side": 1,
      "message": "SetConnectionString \u003d\u003e ApplyURI.",
      "range": {
        "startLine": 68,
        "startChar": 1,
        "endLine": 68,
        "endChar": 2
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7151c108_38f13eb9",
        "filename": "mongo/client.go",
        "patchSetId": 7
      },
      "lineNbr": 68,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-13T16:42:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "acabe8a1_42fb56fc",
      "range": {
        "startLine": 68,
        "startChar": 1,
        "endLine": 68,
        "endChar": 2
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8c151118_fc81a27b",
        "filename": "mongo/client.go",
        "patchSetId": 7
      },
      "lineNbr": 69,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-13T15:44:55Z",
      "side": 1,
      "message": "same",
      "range": {
        "startLine": 69,
        "startChar": 33,
        "endLine": 69,
        "endChar": 52
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9405e3bd_2c8dbbf0",
        "filename": "mongo/client.go",
        "patchSetId": 7
      },
      "lineNbr": 69,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-13T16:42:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8c151118_fc81a27b",
      "range": {
        "startLine": 69,
        "startChar": 33,
        "endLine": 69,
        "endChar": 52
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ac12aea0_31fd1d4d",
        "filename": "mongo/client.go",
        "patchSetId": 7
      },
      "lineNbr": 91,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-13T15:44:55Z",
      "side": 1,
      "message": "Should this just happen in the configure method?  It reads a bit strangely as is, because you naturally look upwards in this method to see where client.topologyOptions is set before realizing that it\u0027s probably set in the configure method",
      "range": {
        "startLine": 91,
        "startChar": 1,
        "endLine": 91,
        "endChar": 7
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ab90dc8_1daa4852",
        "filename": "mongo/client.go",
        "patchSetId": 7
      },
      "lineNbr": 91,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-13T16:42:06Z",
      "side": 1,
      "message": "I did this so that we can actually test the configure method. If we create the topology inside of configure it\u0027s impossible to test if we\u0027ve actually set the options correctly as they\u0027ll be private fields on a struct in another package. I thought of just returning the topology options but then it looks like client.configure doesn\u0027t modify the *Client, which is does. We could take the things that are part of configuration and put them into a separate clientConfig struct and return that, but that seems messier for accessing things like read concern and write concern.",
      "parentUuid": "ac12aea0_31fd1d4d",
      "range": {
        "startLine": 91,
        "startChar": 1,
        "endLine": 91,
        "endChar": 7
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac224a10_c03c3375",
        "filename": "mongo/client.go",
        "patchSetId": 7
      },
      "lineNbr": 91,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-14T00:29:47Z",
      "side": 1,
      "message": "OK, I can live with it.  Thanks for the explanation.",
      "parentUuid": "9ab90dc8_1daa4852",
      "range": {
        "startLine": 91,
        "startChar": 1,
        "endLine": 91,
        "endChar": 7
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "859f3940_81ae99ce",
        "filename": "mongo/client.go",
        "patchSetId": 7
      },
      "lineNbr": 91,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-14T18:52:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ac224a10_c03c3375",
      "range": {
        "startLine": 91,
        "startChar": 1,
        "endLine": 91,
        "endChar": 7
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e8ec7913_3f0da6a3",
        "filename": "mongo/client.go",
        "patchSetId": 7
      },
      "lineNbr": 242,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-13T15:44:55Z",
      "side": 1,
      "message": "Seems like we\u0027re skipping auth configuration unless the mechanism is X509 or GSSAPI? Has this patch been run through CI with auth/SSL enabled?",
      "range": {
        "startLine": 242,
        "startChar": 0,
        "endLine": 242,
        "endChar": 1
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28c0909d_afe40738",
        "filename": "mongo/client.go",
        "patchSetId": 7
      },
      "lineNbr": 242,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-13T16:42:06Z",
      "side": 1,
      "message": "This needs to be fixed up some. The old code was a bit confusing but I think we can just have the if statement hang on opts.Auth !\u003d nil.",
      "parentUuid": "e8ec7913_3f0da6a3",
      "range": {
        "startLine": 242,
        "startChar": 0,
        "endLine": 242,
        "endChar": 1
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42a0b0e0_4e863c34",
        "filename": "mongo/client.go",
        "patchSetId": 7
      },
      "lineNbr": 242,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-14T00:29:47Z",
      "side": 1,
      "message": "Looks good now.  I\u0027d still like to know whether our existing tests would have caught this.  If not, we need more tests.",
      "parentUuid": "28c0909d_afe40738",
      "range": {
        "startLine": 242,
        "startChar": 0,
        "endLine": 242,
        "endChar": 1
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0b90a86_3f4f630e",
        "filename": "mongo/client.go",
        "patchSetId": 7
      },
      "lineNbr": 242,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-14T16:13:47Z",
      "side": 1,
      "message": "They would have, I just hadn\u0027t run it locally.",
      "parentUuid": "42a0b0e0_4e863c34",
      "range": {
        "startLine": 242,
        "startChar": 0,
        "endLine": 242,
        "endChar": 1
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5501385_3396941f",
        "filename": "mongo/client.go",
        "patchSetId": 7
      },
      "lineNbr": 242,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-14T18:52:31Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a0b90a86_3f4f630e",
      "range": {
        "startLine": 242,
        "startChar": 0,
        "endLine": 242,
        "endChar": 1
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bda2412f_99361eb9",
        "filename": "mongo/client.go",
        "patchSetId": 7
      },
      "lineNbr": 245,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-13T15:44:55Z",
      "side": 1,
      "message": "Duplicate nil check from line 242?",
      "range": {
        "startLine": 245,
        "startChar": 0,
        "endLine": 245,
        "endChar": 1
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c3e318f_4087add0",
        "filename": "mongo/client.go",
        "patchSetId": 7
      },
      "lineNbr": 245,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-13T16:42:06Z",
      "side": 1,
      "message": "Rewrote this so this is gone.",
      "parentUuid": "bda2412f_99361eb9",
      "range": {
        "startLine": 245,
        "startChar": 0,
        "endLine": 245,
        "endChar": 1
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eb20fe2a_9e3c8a36",
        "filename": "mongo/client.go",
        "patchSetId": 7
      },
      "lineNbr": 245,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-14T18:52:31Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "3c3e318f_4087add0",
      "range": {
        "startLine": 245,
        "startChar": 0,
        "endLine": 245,
        "endChar": 1
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "960861b5_7b25de73",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 7
      },
      "lineNbr": 93,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-13T15:44:55Z",
      "side": 1,
      "message": "Sentence reads funny.  There\u0027s a dangling \"from\" at the end.",
      "range": {
        "startLine": 93,
        "startChar": 1,
        "endLine": 93,
        "endChar": 2
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "564b6fd2_1914bbf9",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 7
      },
      "lineNbr": 93,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-13T16:42:06Z",
      "side": 1,
      "message": "From isn\u0027t at the end, accordingly is, but I\u0027ve removed from since it wasn\u0027t adding anything.",
      "parentUuid": "960861b5_7b25de73",
      "range": {
        "startLine": 93,
        "startChar": 1,
        "endLine": 93,
        "endChar": 2
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab1d2932_0ba21d25",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 7
      },
      "lineNbr": 93,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-14T00:29:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "564b6fd2_1914bbf9",
      "range": {
        "startLine": 93,
        "startChar": 1,
        "endLine": 93,
        "endChar": 2
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4333d75b_f90ebb44",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 7
      },
      "lineNbr": 113,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-13T15:44:55Z",
      "side": 1,
      "message": "Remind me why is `Password` is the only one of these fields with a `Set` bool companion to it.",
      "range": {
        "startLine": 113,
        "startChar": 25,
        "endLine": 113,
        "endChar": 26
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9389c1a1_c7985e65",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 7
      },
      "lineNbr": 113,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-13T16:42:06Z",
      "side": 1,
      "message": "I\u0027m not sure, that\u0027s likely a good question for Craig.",
      "parentUuid": "4333d75b_f90ebb44",
      "range": {
        "startLine": 113,
        "startChar": 25,
        "endLine": 113,
        "endChar": 26
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6af2d918_360a4fab",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 7
      },
      "lineNbr": 113,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2019-02-13T20:43:17Z",
      "side": 1,
      "message": "Because an empty password is a legal password, technically. So we need to differentiate between an empty password and no password.\n\nIn other words, mongodb://user:@test.com is different than mongodb://user@test.com",
      "parentUuid": "9389c1a1_c7985e65",
      "range": {
        "startLine": 113,
        "startChar": 25,
        "endLine": 113,
        "endChar": 26
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "deb388ab_c33ab859",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 7
      },
      "lineNbr": 113,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-13T20:50:50Z",
      "side": 1,
      "message": "Oh, in that case I\u0027ll fix the code for options.Credential to have a PasswordSet field.",
      "parentUuid": "6af2d918_360a4fab",
      "range": {
        "startLine": 113,
        "startChar": 25,
        "endLine": 113,
        "endChar": 26
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64175614_fb845e03",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 7
      },
      "lineNbr": 113,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-14T00:29:47Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "6af2d918_360a4fab",
      "range": {
        "startLine": 113,
        "startChar": 25,
        "endLine": 113,
        "endChar": 26
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bdcc1f92_d1b823f7",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 7
      },
      "lineNbr": 140,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-13T15:44:55Z",
      "side": 1,
      "message": "This check seems unnecessary, as a URI with no host should be a parsing error.  Looking at the SRV-handing code, it seems possible that if no SRV records are found it silently leaves Hosts as ) length, but if so, that should be propagated as an error.",
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad37629e_b01b99c4",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 7
      },
      "lineNbr": 140,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-13T16:42:06Z",
      "side": 1,
      "message": "It seems weird to me not to check for this.",
      "parentUuid": "bdcc1f92_d1b823f7",
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab2ef730_ed4773cf",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 7
      },
      "lineNbr": 140,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-14T00:29:47Z",
      "side": 1,
      "message": "I don\u0027t think it\u0027s weird.  Consider that if there are no hosts _bad things_ will likely happen later (well, maybe just an error returned further down the stack).  So either we should report an error here if len is zero or prove to ourselves that it can never happen and so the check is unnecessary.",
      "parentUuid": "ad37629e_b01b99c4",
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b534e5e8_bab6926c",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 7
      },
      "lineNbr": 140,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-14T16:13:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ab2ef730_ed4773cf",
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04525c5b_c32f1d97",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 7
      },
      "lineNbr": 214,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-13T15:44:55Z",
      "side": 1,
      "message": "Can you point me to the tests (if any) of this code branch?  It\u0027s difficult to tell by inspection whether it\u0027s correct.",
      "range": {
        "startLine": 214,
        "startChar": 0,
        "endLine": 214,
        "endChar": 1
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f442820_ca4ec458",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 7
      },
      "lineNbr": 214,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-13T16:42:06Z",
      "side": 1,
      "message": "The tests that start with TLS. This method has 100% test coverage, so this code is being tested.",
      "parentUuid": "04525c5b_c32f1d97",
      "range": {
        "startLine": 214,
        "startChar": 0,
        "endLine": 214,
        "endChar": 1
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06032c41_7efcd202",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 7
      },
      "lineNbr": 214,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-14T00:29:47Z",
      "side": 1,
      "message": "Sorry, not sure which ones you\u0027re talking about... can you give me a link please? :|",
      "parentUuid": "9f442820_ca4ec458",
      "range": {
        "startLine": 214,
        "startChar": 0,
        "endLine": 214,
        "endChar": 1
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15e15478_20009edb",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 7
      },
      "lineNbr": 214,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-14T16:13:47Z",
      "side": 1,
      "message": "Added a comment where the tests are.",
      "parentUuid": "06032c41_7efcd202",
      "range": {
        "startLine": 214,
        "startChar": 0,
        "endLine": 214,
        "endChar": 1
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fff6d88e_5a8c2682",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 7
      },
      "lineNbr": 214,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-14T18:58:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "15e15478_20009edb",
      "range": {
        "startLine": 214,
        "startChar": 0,
        "endLine": 214,
        "endChar": 1
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9d20c97_7189b45e",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 7
      },
      "lineNbr": 226,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2019-02-13T21:47:10Z",
      "side": 1,
      "message": "I think this needs to go elsewhere. Otherwise, if the user doesn\u0027t configure TLS on the URI, the we won\u0027t autodiscover the username.  However, we can get this from the certificates in the tls.Config they give us later, so we might as well do that.\n\nThe decrypting is a different problem that I don\u0027t think we should solve even on the URI, but that ship has sailed, so I\u0027m fine with it.",
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5df7af1_96cd0c50",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 7
      },
      "lineNbr": 226,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-13T22:34:41Z",
      "side": 1,
      "message": "I feel like that will add of complexity to this code. Right now we support 1 cert block and 1 private key block in a PEM file (or essentially do, if there are multiple we take the last). A tls.Config could have multiple certificates each of which has multiple sub certificates, how would we choose which one to use? That would also seem to go against the purpose of taking a *tls.Config as well, wherein if the user provides us with that then they need to configuring things properly, which includes setting the authentication username.",
      "parentUuid": "f9d20c97_7189b45e",
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32a48649_7c572154",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 7
      },
      "lineNbr": 226,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2019-02-14T21:21:19Z",
      "side": 1,
      "message": "So, we are saying that if you give us a tls.Config yourself, it\u0027s your job to (a) decrypt it if necessary and (b) tell us the X509 username?\n\nI\u0027m ok with that.",
      "parentUuid": "a5df7af1_96cd0c50",
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a085f6a6_20180bd3",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 7
      },
      "lineNbr": 226,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-15T18:46:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "32a48649_7c572154",
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4c61322_c866340c",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 7
      },
      "lineNbr": 498,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-13T15:44:55Z",
      "side": 1,
      "message": "It seems like this code was copied from tlsconfig.go, but I don\u0027t see that tlsconfig.go was changed or deleted.",
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d4dc48ff_0c8325ca",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 7
      },
      "lineNbr": 498,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-13T16:42:06Z",
      "side": 1,
      "message": "It was because changing core API isn\u0027t in scope for this ticket.",
      "parentUuid": "a4c61322_c866340c",
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2500ec1e_8e8cfacb",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 7
      },
      "lineNbr": 498,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-14T00:29:47Z",
      "side": 1,
      "message": "OK, after a lot of digging through the code base I think I understand where you\u0027re coming from.  My understanding is that the tlsconfig.go code that this duplicates will only be exercised by an application using Topology directly (e.g. by calling WithConnString).  So assuming that will all disappear in fairly short order, I\u0027m ok with the duplication in that case.",
      "parentUuid": "d4dc48ff_0c8325ca",
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72ae3ff2_38099d47",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 7
      },
      "lineNbr": 498,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-14T16:13:47Z",
      "side": 1,
      "message": "It will be removed during GODRIVER-617.",
      "parentUuid": "2500ec1e_8e8cfacb",
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2cd75c75_5b6f2d8e",
        "filename": "mongo/options/clientoptions.go",
        "patchSetId": 7
      },
      "lineNbr": 498,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-14T18:52:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "72ae3ff2_38099d47",
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a3d145d_2bc950f6",
        "filename": "mongo/options/clientoptions_test.go",
        "patchSetId": 7
      },
      "lineNbr": 350,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-14T16:13:47Z",
      "side": 1,
      "message": "TLS URI tests.",
      "range": {
        "startLine": 323,
        "startChar": 3,
        "endLine": 350,
        "endChar": 5
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e39f307a_986dcae6",
        "filename": "mongo/options/testdata/ca.pem",
        "patchSetId": 7
      },
      "lineNbr": 1,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-13T15:44:55Z",
      "side": 1,
      "message": "Why all the new pem files?",
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b9b8602_99db16f9",
        "filename": "mongo/options/testdata/ca.pem",
        "patchSetId": 7
      },
      "lineNbr": 1,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-13T16:42:06Z",
      "side": 1,
      "message": "For testing.",
      "parentUuid": "e39f307a_986dcae6",
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3eb24020_397d4d9c",
        "filename": "mongo/options/testdata/ca.pem",
        "patchSetId": 7
      },
      "lineNbr": 1,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-14T18:52:31Z",
      "side": 1,
      "message": "I figured that given the location, but I don\u0027t see where they are all being used.  For instance, grep for \"ca-key\" turned up nothing.",
      "parentUuid": "9b9b8602_99db16f9",
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "358db813_90732777",
        "filename": "mongo/options/testdata/ca.pem",
        "patchSetId": 7
      },
      "lineNbr": 1,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-14T20:53:50Z",
      "side": 1,
      "message": "Ah, I left that there so we can generate signed keys again later if we need.",
      "parentUuid": "3eb24020_397d4d9c",
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e643b125_06cd0106",
        "filename": "mongo/options/testdata/ca.pem",
        "patchSetId": 7
      },
      "lineNbr": 1,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-14T21:07:50Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "358db813_90732777",
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8233c316_5e2a4da6",
        "filename": "x/bsonx/bsoncore/bsoncore.go",
        "patchSetId": 7
      },
      "lineNbr": 224,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-13T15:44:55Z",
      "side": 1,
      "message": "Document that it returns `dst`",
      "range": {
        "startLine": 224,
        "startChar": 1,
        "endLine": 224,
        "endChar": 2
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aaef53ab_9c276024",
        "filename": "x/bsonx/bsoncore/bsoncore.go",
        "patchSetId": 7
      },
      "lineNbr": 224,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-13T16:42:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8233c316_5e2a4da6",
      "range": {
        "startLine": 224,
        "startChar": 1,
        "endLine": 224,
        "endChar": 2
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e409f697_29d9106d",
        "filename": "x/bsonx/bsoncore/bsoncore.go",
        "patchSetId": 7
      },
      "lineNbr": 225,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-13T15:44:55Z",
      "side": 1,
      "message": "Add a unit test?",
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2649b16_bbcf40ae",
        "filename": "x/bsonx/bsoncore/bsoncore.go",
        "patchSetId": 7
      },
      "lineNbr": 225,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-13T16:42:06Z",
      "side": 1,
      "message": "No, but neither does BuildDocument, and right now this is just used in test code. It\u0027s more a test design than anything and likely to change.",
      "parentUuid": "e409f697_29d9106d",
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2afff48f_7446744e",
        "filename": "x/bsonx/bsoncore/bsoncore.go",
        "patchSetId": 7
      },
      "lineNbr": 225,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-14T18:52:31Z",
      "side": 1,
      "message": "Sorry, but if it\u0027s worth adding to the public API it\u0027s worth adding a test for it.  Feel free to add add a test for BuildDocument as well if the inconsistency bothers you.\n\nIf it\u0027s really only used in tests and you don\u0027t think it should be part of the public API, consider moving it to a test class.",
      "parentUuid": "c2649b16_bbcf40ae",
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c182fad_108e31e8",
        "filename": "x/bsonx/bsoncore/bsoncore.go",
        "patchSetId": 7
      },
      "lineNbr": 225,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-14T20:53:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2afff48f_7446744e",
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3d1f872b_d691bb4a",
        "filename": "x/mongo/driver/bulk_write.go",
        "patchSetId": 7
      },
      "lineNbr": 575,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-13T15:44:55Z",
      "side": 1,
      "message": "This got more complicated... Are there sufficient regression tests, or do they need to be beefed up at all?",
      "range": {
        "startLine": 575,
        "startChar": 0,
        "endLine": 575,
        "endChar": 1
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "029f40e5_5f4d8e5d",
        "filename": "x/mongo/driver/bulk_write.go",
        "patchSetId": 7
      },
      "lineNbr": 575,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-13T16:42:06Z",
      "side": 1,
      "message": "Are the CRUD tests not sufficient?",
      "parentUuid": "3d1f872b_d691bb4a",
      "range": {
        "startLine": 575,
        "startChar": 0,
        "endLine": 575,
        "endChar": 1
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23aa9f1d_bc1d3542",
        "filename": "x/mongo/driver/bulk_write.go",
        "patchSetId": 7
      },
      "lineNbr": 575,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-14T00:29:47Z",
      "side": 1,
      "message": "I don\u0027t know.  Can you check?  I don\u0027t trust the CRUD spec tests yet to exhaustively test all options.  If they do, then fine to resolve this comment.",
      "parentUuid": "029f40e5_5f4d8e5d",
      "range": {
        "startLine": 575,
        "startChar": 0,
        "endLine": 575,
        "endChar": 1
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eed73d41_897b6d8f",
        "filename": "x/mongo/driver/bulk_write.go",
        "patchSetId": 7
      },
      "lineNbr": 575,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-14T16:13:47Z",
      "side": 1,
      "message": "Looking at the CRUD spec tests it does appear that this is covered and running the tests with coverage enabled shows this code getting hit.",
      "parentUuid": "23aa9f1d_bc1d3542",
      "range": {
        "startLine": 575,
        "startChar": 0,
        "endLine": 575,
        "endChar": 1
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "320e4225_b1f0716e",
        "filename": "x/mongo/driver/bulk_write.go",
        "patchSetId": 7
      },
      "lineNbr": 575,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-14T18:52:31Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "eed73d41_897b6d8f",
      "range": {
        "startLine": 575,
        "startChar": 0,
        "endLine": 575,
        "endChar": 1
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f21659c4_ed3b0b87",
        "filename": "x/mongo/driver/update.go",
        "patchSetId": 7
      },
      "lineNbr": 53,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-13T15:44:55Z",
      "side": 1,
      "message": "This 15 lines or so that handle array filters appears in four places I think.  Can we pull the common parts out into a helper method?",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 53,
        "endChar": 1
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5fd61e5_51f269d1",
        "filename": "x/mongo/driver/update.go",
        "patchSetId": 7
      },
      "lineNbr": 53,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-13T16:42:06Z",
      "side": 1,
      "message": "It would only remove 2 lines of code and add extra indirection.",
      "parentUuid": "f21659c4_ed3b0b87",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 53,
        "endChar": 1
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "802c8457_1899cd6c",
        "filename": "x/mongo/driver/update.go",
        "patchSetId": 7
      },
      "lineNbr": 53,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-14T00:29:47Z",
      "side": 1,
      "message": "Not sure what two lines you\u0027re talking about.  I\u0027m suggesting to replace a dozen or so lines with a helper.  \n\nI\u0027m not clear what the objection is.  What\u0027s wrong with indirection when it removes code duplication?  Is it that there\u0027s no good place to put such a helper?",
      "parentUuid": "c5fd61e5_51f269d1",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 53,
        "endChar": 1
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9926e952_f06807dd",
        "filename": "x/mongo/driver/update.go",
        "patchSetId": 7
      },
      "lineNbr": 53,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2019-02-14T16:13:47Z",
      "side": 1,
      "message": "Each of these is slightly different because it has to grab the filters from a specific field of a document. I\u0027m saying that we won\u0027t actually remove that many lines with a helper function and it\u0027ll just cause indirection in the code, for the purpose of saving some lines of code.",
      "parentUuid": "802c8457_1899cd6c",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 53,
        "endChar": 1
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "422172ea_84394fa6",
        "filename": "x/mongo/driver/update.go",
        "patchSetId": 7
      },
      "lineNbr": 53,
      "author": {
        "id": 1013848
      },
      "writtenOn": "2019-02-14T18:52:31Z",
      "side": 1,
      "message": "So the function is parameterized with the differences. I still don\u0027t see the problem.\n\nI think this is verging on a larger discussion of the benefits and shortcomings of DRY. I\u0027m willing to let it go here, but it\u0027s something we should come to agreement about as a team.\n\nAny thoughts on this, @Craig, @Isabella?",
      "parentUuid": "9926e952_f06807dd",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 53,
        "endChar": 1
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea17872b_c5e6b788",
        "filename": "x/mongo/driver/update.go",
        "patchSetId": 7
      },
      "lineNbr": 53,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2019-02-14T21:21:19Z",
      "side": 1,
      "message": "I\u0027ve read a number of articles on go and DRY. The takeaways I have had are these: \n\n1. don\u0027t DRY when it makes code harder to read.\n2. don\u0027t DRY when it\u0027s the same code but different business contexts.\n3. we are more flexible on (1) and (2) in golang.\n\nHowever, none of these apply here. \n1. These locations are already a bit difficult to read that a named function would absolutely clear up. `appendArrayFilters` or something.\n2. This is the same code in the same business context. Take ArrayFilters and append them to a bsonx.Document. There isn\u0027t any business reason where this would change for one and not the others.\n\nAnyways, my 2 cents for what it\u0027s worth.",
      "parentUuid": "422172ea_84394fa6",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 53,
        "endChar": 1
      },
      "revId": "ee5bbd1a7744d104e545bcc300e4e992921d01cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}