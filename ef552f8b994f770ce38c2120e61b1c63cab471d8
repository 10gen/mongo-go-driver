{
  "comments": [
    {
      "key": {
        "uuid": "aa8006b7_1bdaa2b0",
        "filename": "core/connection/compression.go",
        "patchSetId": 15
      },
      "lineNbr": 1,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-06-15T16:07:45Z",
      "side": 1,
      "message": "At this point, it looks like it is possible to isolate this file into it\u0027s own package as it depends on nothing and everything that requires it is already exported.",
      "revId": "ef552f8b994f770ce38c2120e61b1c63cab471d8",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56af0aba_e3d07417",
        "filename": "core/connection/compression.go",
        "patchSetId": 15
      },
      "lineNbr": 1,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2018-06-15T17:40:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aa8006b7_1bdaa2b0",
      "revId": "ef552f8b994f770ce38c2120e61b1c63cab471d8",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83ee8044_52494553",
        "filename": "core/connection/connection.go",
        "patchSetId": 15
      },
      "lineNbr": 130,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-06-15T16:07:45Z",
      "side": 1,
      "message": "Can we not just use the ones from the config? loop through the cfg.compressors and add them to the map? The server will only reply with compressors we have indicated we support, which ultimately is what the user configured. Since compression is opt-in, most users won\u0027t turn it on which means we don\u0027t actually every create any compressors... ever.",
      "revId": "ef552f8b994f770ce38c2120e61b1c63cab471d8",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7fe521d1_a87d1cf9",
        "filename": "core/connection/connection.go",
        "patchSetId": 15
      },
      "lineNbr": 130,
      "author": {
        "id": 1014410
      },
      "writtenOn": "2018-06-15T17:42:48Z",
      "side": 1,
      "message": "We considered this but this paragraph in the OP_COMPRESSED spec confused me:\n\n\"When MongoDB server receives a compressor it can support it MAY reply to any and all requests using the selected compressor, including the reply of the initial MongoDB Handshake. As each OP_COMPRESSED message contains the compressor ID, clients MUST NOT assume which compressor each message uses, but MUST decompress the message using the compressor identified in the OP_COMPRESSED opcode header.\"\n\nThis makes it seem like the server can use any compression method for responses if the driver supports compression, regardless of whether or not the driver is compressing messages. This would mean having to create both snappy and zlib compressors for ever connection regardless of what\u0027s in the config.",
      "parentUuid": "83ee8044_52494553",
      "revId": "ef552f8b994f770ce38c2120e61b1c63cab471d8",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f45216c_5798c542",
        "filename": "core/connection/connection.go",
        "patchSetId": 15
      },
      "lineNbr": 130,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-06-15T18:41:00Z",
      "side": 1,
      "message": "If the driver doesn\u0027t indicate it can use snappy, the server _cannot_ send a snappy response. The .NET driver has this issue where supporting snappy requires taking an external dependency they aren\u0027t willing to take. Ff the server ever sent a snappy packet, it would always be destined to fail.\n\nHence, I believe that the paragraph you are citing indicates that the server can use any compressor for any response that the driver has indicated it supports. Which means that the packets passed in via cfg are the only ones the server will ever possible reply with. And since you already have them, you should just be able to construct a map from them and use as is.",
      "parentUuid": "7fe521d1_a87d1cf9",
      "revId": "ef552f8b994f770ce38c2120e61b1c63cab471d8",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}