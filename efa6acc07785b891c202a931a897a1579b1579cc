{
  "comments": [
    {
      "key": {
        "uuid": "cbf24328_fb2f9aaf",
        "filename": "bson/array.go",
        "patchSetId": 8
      },
      "lineNbr": 354,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-10-11T17:21:48Z",
      "side": 1,
      "message": "I think this check needs to go above 350, otherwise you\u0027ll nil reference panic.",
      "revId": "efa6acc07785b891c202a931a897a1579b1579cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a0837b4_d63bc0bc",
        "filename": "bson/array.go",
        "patchSetId": 8
      },
      "lineNbr": 354,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2018-10-11T22:41:49Z",
      "side": 1,
      "message": "You are correct. Fixed.",
      "parentUuid": "cbf24328_fb2f9aaf",
      "revId": "efa6acc07785b891c202a931a897a1579b1579cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ba614b0_29e3f6b4",
        "filename": "bson/bsoncodec/bsoncodec.go",
        "patchSetId": 8
      },
      "lineNbr": 12,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-10-11T17:21:48Z",
      "side": 1,
      "message": "There are a whole bunch of types in bsoncodec/types.go already, why can these not be there?",
      "revId": "efa6acc07785b891c202a931a897a1579b1579cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "546e5fe9_162d3d88",
        "filename": "bson/bsoncodec/bsoncodec.go",
        "patchSetId": 8
      },
      "lineNbr": 12,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2018-10-11T22:41:49Z",
      "side": 1,
      "message": "They can, these have been moved around and were written in different files originally. No point in keeping them separate now, though.",
      "parentUuid": "9ba614b0_29e3f6b4",
      "revId": "efa6acc07785b891c202a931a897a1579b1579cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f0248462_ce406877",
        "filename": "bson/bsonrw/value_reader.go",
        "patchSetId": 8
      },
      "lineNbr": 89,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-10-11T17:21:48Z",
      "side": 1,
      "message": "NewBSONValueReader is the better name.",
      "revId": "efa6acc07785b891c202a931a897a1579b1579cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1e55332_58f7f321",
        "filename": "bson/bsonrw/value_reader.go",
        "patchSetId": 8
      },
      "lineNbr": 89,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2018-10-11T22:41:49Z",
      "side": 1,
      "message": "NewBSONValueReader it is!",
      "parentUuid": "f0248462_ce406877",
      "revId": "efa6acc07785b891c202a931a897a1579b1579cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7d327da0_de37bd1b",
        "filename": "bson/primitive_codecs.go",
        "patchSetId": 8
      },
      "lineNbr": 26,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-10-11T17:21:48Z",
      "side": 1,
      "message": "Do we need to be tricky here? This is was very confusing. Why not just require the caller to provide a registry? And why not register the DefaultValueEncoders/Decoders outside this call as well? This should all just be part of NewDefaultRegistry(). If they don\u0027t want anything registered, they can get that from the bsoncodec package.",
      "revId": "efa6acc07785b891c202a931a897a1579b1579cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19deb634_a92a4195",
        "filename": "bson/primitive_codecs.go",
        "patchSetId": 8
      },
      "lineNbr": 26,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2018-10-11T22:41:49Z",
      "side": 1,
      "message": "I\u0027d like to avoid returning an error here, but I did update the NewDefaultRegistry function to handle the default encoders and decoders instead.",
      "parentUuid": "7d327da0_de37bd1b",
      "revId": "efa6acc07785b891c202a931a897a1579b1579cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56e52cf9_27bb6e8c",
        "filename": "bson/primitive_codecs.go",
        "patchSetId": 8
      },
      "lineNbr": 26,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-10-11T23:13:29Z",
      "side": 1,
      "message": "I wouldn\u0027t return an error... I\u0027d just panic. This isn\u0027t going to be something that might or might not trigger at runtime at some time in the indefinite future. It\u0027s a user error that will keep their application from starting up.",
      "parentUuid": "19deb634_a92a4195",
      "revId": "efa6acc07785b891c202a931a897a1579b1579cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be7ecd10_df4cd7f0",
        "filename": "bson/primitive_codecs.go",
        "patchSetId": 8
      },
      "lineNbr": 26,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-10-11T23:15:32Z",
      "side": 1,
      "message": "And it\u0027s clear that this should break because we shouldn\u0027t return the registry builder from the method. It probably shouldn\u0027t have any return value.",
      "parentUuid": "56e52cf9_27bb6e8c",
      "revId": "efa6acc07785b891c202a931a897a1579b1579cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a858ba4a_223775a9",
        "filename": "bson/primitive_codecs.go",
        "patchSetId": 8
      },
      "lineNbr": 26,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2018-10-11T23:39:54Z",
      "side": 1,
      "message": "Ah good point. I\u0027ll remove the return value and add a panic.",
      "parentUuid": "be7ecd10_df4cd7f0",
      "revId": "efa6acc07785b891c202a931a897a1579b1579cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8240894_15d89b76",
        "filename": "bson/types.go",
        "patchSetId": 8
      },
      "lineNbr": 16,
      "author": {
        "id": 1013853
      },
      "writtenOn": "2018-10-11T17:21:48Z",
      "side": 1,
      "message": "Why not have these point to the bsontype as well?\n\nTypeDouble \u003d bsontype.Double\n\nThat way, less chance of an errant typo.",
      "revId": "efa6acc07785b891c202a931a897a1579b1579cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2ebb6be_ca089bd8",
        "filename": "bson/types.go",
        "patchSetId": 8
      },
      "lineNbr": 16,
      "author": {
        "id": 1001503
      },
      "writtenOn": "2018-10-11T22:41:49Z",
      "side": 1,
      "message": "My intention was to remove these, but they seem useful from a user standpoint. At least during the transition. I\u0027ve updated this but would still like to remove this in the future.",
      "parentUuid": "a8240894_15d89b76",
      "revId": "efa6acc07785b891c202a931a897a1579b1579cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}