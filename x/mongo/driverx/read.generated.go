// Copyright (C) MongoDB, Inc. 2017-present.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License. You may obtain
// a copy of the License at http://www.apache.org/licenses/LICENSE-2.0

// Code generated by drivergen. DO NOT EDIT.

package driverx

import (
	"go.mongodb.org/mongo-driver/mongo/readconcern"
	"go.mongodb.org/mongo-driver/mongo/readpref"
	"go.mongodb.org/mongo-driver/x/bsonx/bsoncore"
	"go.mongodb.org/mongo-driver/x/mongo/driver/session"
	"go.mongodb.org/mongo-driver/x/network/description"
)

func (ro ReadOperation) Session(client *session.Client) ReadOperation {
	ro.client = client
	return ro
}

func (ro ReadOperation) Clock(clock *session.ClusterClock) ReadOperation {
	ro.clock = clock
	return ro
}

// Command sets the command that will be run.
func (ro ReadOperation) Command(cmd bsoncore.Document) ReadOperation {
	ro.cmd = cmd
	return ro
}

// Deployment sets the Deployment to run the command against.
func (ro ReadOperation) Deployment(d Deployment) ReadOperation {
	ro.d = d
	return ro
}

// Database sets the database to run the command against.
func (ro ReadOperation) Database(database string) ReadOperation {
	ro.database = database
	return ro
}

// ReadConcern sets the read concern to use when running the command.
func (ro ReadOperation) ReadConcern(rc *readconcern.ReadConcern) ReadOperation {
	ro.rc = rc
	return ro
}

func (ro ReadOperation) ReadPreference(readPref *readpref.ReadPref) ReadOperation {
	ro.readPref = readPref
	return ro
}

func (ro ReadOperation) ServerSelector(selector description.ServerSelector) ReadOperation {
	ro.selector = selector
	return ro
}
